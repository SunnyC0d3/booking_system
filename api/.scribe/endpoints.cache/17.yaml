## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Admin Review Response Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/review-responses/analytics
    metadata:
      groupName: 'Admin Review Response Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get review response analytics and statistics'
      description: |-
        Retrieve comprehensive analytics about vendor responses including response rates,
        approval statistics, vendor performance metrics, and trends for administrative insights.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      period:
        name: period
        description: 'optional Time period for analytics. Options: today, week, month, quarter, year. Default: month.'
        required: false
        example: week
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      vendor_id:
        name: vendor_id
        description: 'optional Get analytics for specific vendor.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      include_trends:
        name: include_trends
        description: 'optional Include trend data and charts. Default: false.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      period: week
      vendor_id: 8
      include_trends: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Response analytics retrieved successfully.",
            "data": {
              "summary": {
                "total_responses": 156,
                "pending_approval": 12,
                "approved_responses": 144,
                "response_rate": 73.2,
                "average_response_time_hours": 6.4
              },
              "period_stats": {
                "new_responses": 23,
                "approved_responses": 21,
                "rejected_responses": 1
              },
              "top_vendors": [
                {
                  "vendor_id": 8,
                  "vendor_name": "Tech Solutions Inc",
                  "response_count": 45,
                  "response_rate": 89.5,
                  "average_response_time": 4.2
                },
                {
                  "vendor_id": 12,
                  "vendor_name": "Premium Electronics",
                  "response_count": 32,
                  "response_rate": 78.3,
                  "average_response_time": 8.1
                }
              ],
              "response_trends": {
                "daily_responses": [
                  {"date": "2025-01-10", "responses": 8},
                  {"date": "2025-01-11", "responses": 12},
                  {"date": "2025-01-12", "responses": 6}
                ]
              }
            }
          }
        headers: []
        description: 'Analytics retrieved successfully'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/review-responses/bulk-moderate
    metadata:
      groupName: 'Admin Review Response Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk moderate multiple vendor responses'
      description: |-
        Perform the same moderation action on multiple vendor responses simultaneously.
        Useful for bulk approval, rejection, or deletion of responses.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      response_ids:
        name: response_ids
        description: 'Array of response IDs to moderate.'
        required: true
        example:
          - 45
          - 46
          - 47
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      action:
        name: action
        description: 'Bulk action to perform. Options: approve, reject, delete.'
        required: true
        example: approve
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reason:
        name: reason
        description: 'optional Reason for bulk action (recommended for reject/delete).'
        required: false
        example: '"Quality assurance batch approval"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      response_ids:
        - 45
        - 46
        - 47
      action: approve
      reason: '"Quality assurance batch approval"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Bulk moderation completed successfully.",
            "data": {
              "action": "approve",
              "total_responses": 3,
              "successful": 3,
              "failed": 0,
              "results": [
                {
                  "response_id": 45,
                  "status": "success",
                  "message": "Approved successfully"
                },
                {
                  "response_id": 46,
                  "status": "success",
                  "message": "Approved successfully"
                },
                {
                  "response_id": 47,
                  "status": "success",
                  "message": "Approved successfully"
                }
              ],
              "moderated_by": {
                "id": 1,
                "name": "Admin User"
              },
              "moderated_at": "2025-01-16T14:30:00.000000Z"
            }
          }
        headers: []
        description: 'Bulk moderation completed'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The response_ids field is required.",
              "The action field is required."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/review-responses
    metadata:
      groupName: 'Admin Review Response Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all review responses with admin filtering capabilities'
      description: |-
        Retrieve all vendor responses in the system with advanced admin filtering and sorting.
        Provides comprehensive response management including pending approvals, response analytics,
        and detailed oversight for administrative purposes.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      vendor_id:
        name: vendor_id
        description: 'optional Filter by specific vendor ID.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'optional Filter by specific product ID.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      review_rating:
        name: review_rating
        description: 'optional Filter by review ratings (1-5).'
        required: false
        example:
          - 4
          - 5
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'optional Filter by approval status. Options: approved, pending, rejected.'
        required: false
        example: pending
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'optional Sort responses. Options: newest, oldest, rating_high, rating_low.'
        required: false
        example: newest
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Number of responses per page (1-100). Default: 20.'
        required: false
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'optional Page number for pagination. Default: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      vendor_id: 5
      product_id: 15
      review_rating:
        - 4
        - 5
      status: pending
      sort_by: newest
      per_page: 50
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Review responses retrieved successfully.",
            "data": {
              "data": [
                {
                  "id": 45,
                  "review": {
                    "id": 123,
                    "rating": 4,
                    "title": "Good product",
                    "user": {
                      "id": 67,
                      "name": "John Doe",
                      "email": "john@example.com"
                    },
                    "product": {
                      "id": 15,
                      "name": "Premium Wireless Earbuds"
                    }
                  },
                  "vendor": {
                    "id": 8,
                    "name": "Tech Solutions Inc",
                    "description": "Leading electronics vendor"
                  },
                  "user": {
                    "id": 89,
                    "name": "Vendor Manager",
                    "email": "manager@techsolutions.com"
                  },
                  "content": "Thank you for your feedback! We're glad you're satisfied with the product.",
                  "is_approved": true,
                  "approved_at": "2025-01-15T10:30:00.000000Z",
                  "created_at": "2025-01-14T16:45:00.000000Z"
                }
              ],
              "current_page": 1,
              "per_page": 20,
              "total": 156,
              "last_page": 8
            }
          }
        headers: []
        description: 'Responses retrieved successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/review-responses/{response_id}'
    metadata:
      groupName: 'Admin Review Response Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed review response information for admin'
      description: |-
        Retrieve comprehensive admin view of a specific vendor response including
        review context, vendor details, approval status, and administrative actions available.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      response_id:
        name: response_id
        description: 'The ID of the response.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      response:
        name: response
        description: 'The ID of the response to retrieve.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      response_id: 2
      response: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Response details retrieved successfully.",
            "data": {
              "id": 45,
              "review": {
                "id": 123,
                "rating": 4,
                "title": "Good product",
                "content": "The product works well but could use some improvements in design.",
                "is_verified_purchase": true,
                "user": {
                  "id": 67,
                  "name": "John Doe",
                  "email": "john@example.com"
                },
                "product": {
                  "id": 15,
                  "name": "Premium Wireless Earbuds",
                  "vendor_id": 8
                }
              },
              "vendor": {
                "id": 8,
                "name": "Tech Solutions Inc",
                "description": "Leading electronics vendor"
              },
              "user": {
                "id": 89,
                "name": "Vendor Manager",
                "email": "manager@techsolutions.com"
              },
              "content": "Thank you for your detailed feedback! We appreciate your honest review and will take your design suggestions into consideration for future product iterations. If you have any specific concerns, please don't hesitate to contact our support team.",
              "is_approved": true,
              "approved_at": "2025-01-15T10:30:00.000000Z",
              "created_at": "2025-01-14T16:45:00.000000Z",
              "updated_at": "2025-01-14T17:20:00.000000Z"
            }
          }
        headers: []
        description: 'Response retrieved successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\ReviewResponse] 999"
          }
        headers: []
        description: 'Response not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/review-responses/{response_id}/approve'
    metadata:
      groupName: 'Admin Review Response Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a vendor response'
      description: |-
        Approve a pending vendor response, making it visible to customers.
        Only responses that are currently unapproved can be approved through this endpoint.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      response_id:
        name: response_id
        description: 'The ID of the response.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      response:
        name: response
        description: 'The ID of the response to approve.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      response_id: 2
      response: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Response approved successfully.",
            "data": {
              "id": 45,
              "is_approved": true,
              "approved_at": "2025-01-16T14:30:00.000000Z",
              "approved_by": {
                "id": 1,
                "name": "Admin User"
              }
            }
          }
        headers: []
        description: 'Response approved successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 409
        content: |-
          {
            "message": "Response is already approved."
          }
        headers: []
        description: 'Already approved'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/review-responses/{response_id}'
    metadata:
      groupName: 'Admin Review Response Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a vendor response permanently'
      description: |-
        Permanently delete a vendor response. This action is irreversible and will
        remove the response from the review thread completely.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      response_id:
        name: response_id
        description: 'The ID of the response.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      response:
        name: response
        description: 'The ID of the response to delete permanently.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      response_id: 2
      response: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Response deleted permanently."
          }
        headers: []
        description: 'Response deleted successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\ReviewResponse] 999"
          }
        headers: []
        description: 'Response not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
