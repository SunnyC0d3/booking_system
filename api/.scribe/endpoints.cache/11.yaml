## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Return Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/returns
    metadata:
      groupName: 'Return Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of all return requests'
      description: |-
        Get a comprehensive list of all return requests in the system with detailed information
        about customer reasons, order details, product information, and current status. This endpoint
        is essential for customer service management, return processing workflows, and administrative
        oversight of the returns process. Includes complete audit trail and customer communication history.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'optional Page number for pagination. Default: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Number of returns per page (max 100). Default: 20.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'optional Filter by return status. Available: Requested, Under Review, Approved, Rejected, Return Shipped, Return Received, Completed, Cancelled, Pending.'
        required: false
        example: Requested
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'optional Filter returns from this date (YYYY-MM-DD format).'
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'optional Filter returns to this date (YYYY-MM-DD format).'
        required: false
        example: '2025-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order_id:
        name: order_id
        description: 'optional Filter returns by specific order ID.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'optional Filter returns by specific customer ID.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'optional Filter returns by specific product ID.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reason:
        name: reason
        description: 'optional Filter by return reason (partial text search).'
        required: false
        example: damaged
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      per_page: 25
      status: Requested
      date_from: '2025-01-01'
      date_to: '2025-01-31'
      order_id: 8
      user_id: 3
      product_id: 12
      reason: damaged
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order returns retrieved.",
              "data": {
                  "data": [
                      {
                          "id": 1,
                          "reason": "Product damaged on arrival - speaker has crackling sound at any volume level. Packaging appeared intact but internal components seem faulty.",
                          "status": "Requested",
                          "created_at": "2025-01-15T10:30:00.000000Z",
                          "updated_at": "2025-01-15T10:30:00.000000Z",
                          "order_item": {
                              "id": 25,
                              "quantity": 2,
                              "price": 2999,
                              "price_formatted": "£29.99",
                              "line_total": 5998,
                              "line_total_formatted": "£59.98",
                              "created_at": "2025-01-10T16:30:00.000000Z",
                              "product": {
                                  "id": 12,
                                  "name": "Wireless Headphones",
                                  "description": "Premium quality wireless headphones with active noise cancellation",
                                  "price": 2999,
                                  "price_formatted": "£29.99",
                                  "featured_image": "https://yourapi.com/storage/products/headphones-featured.jpg"
                              },
                              "order": {
                                  "id": 8,
                                  "total_amount": 5998,
                                  "total_amount_formatted": "£59.98",
                                  "created_at": "2025-01-10T16:30:00.000000Z",
                                  "updated_at": "2025-01-12T11:15:00.000000Z",
                                  "user": {
                                      "id": 3,
                                      "name": "Sarah Johnson",
                                      "email": "sarah@example.com",
                                      "email_verified_at": "2025-01-05T12:00:00.000000Z"
                                  }
                              }
                          }
                      },
                      {
                          "id": 2,
                          "reason": "Product does not match description - advertised as waterproof but water damage occurred during first use",
                          "status": "Under Review",
                          "created_at": "2025-01-14T14:20:00.000000Z",
                          "updated_at": "2025-01-15T09:45:00.000000Z",
                          "order_item": {
                              "id": 31,
                              "quantity": 1,
                              "price": 4999,
                              "price_formatted": "£49.99",
                              "line_total": 4999,
                              "line_total_formatted": "£49.99",
                              "product": {
                                  "id": 18,
                                  "name": "Bluetooth Portable Speaker",
                                  "description": "Compact waterproof speaker with 12-hour battery",
                                  "price": 4999,
                                  "price_formatted": "£49.99"
                              },
                              "order": {
                                  "id": 11,
                                  "total_amount": 4999,
                                  "total_amount_formatted": "£49.99",
                                  "user": {
                                      "id": 7,
                                      "name": "Michael Chen",
                                      "email": "michael@example.com",
                                      "email_verified_at": "2025-01-08T14:30:00.000000Z"
                                  }
                              }
                          }
                      },
                      {
                          "id": 3,
                          "reason": "Changed mind about purchase - no longer needed due to receiving similar item as gift",
                          "status": "Approved",
                          "created_at": "2025-01-13T16:15:00.000000Z",
                          "updated_at": "2025-01-14T11:20:00.000000Z",
                          "order_item": {
                              "id": 28,
                              "quantity": 1,
                              "price": 7999,
                              "price_formatted": "£79.99",
                              "product": {
                                  "id": 23,
                                  "name": "Premium Bluetooth Speaker",
                                  "price": 7999,
                                  "price_formatted": "£79.99"
                              },
                              "order": {
                                  "id": 9,
                                  "total_amount": 7999,
                                  "total_amount_formatted": "£79.99",
                                  "user": {
                                      "id": 15,
                                      "name": "Emma Wilson",
                                      "email": "emma@example.com"
                                  }
                              }
                          }
                      },
                      {
                          "id": 4,
                          "reason": "Wrong size ordered by mistake - need larger size but currently out of stock",
                          "status": "Rejected",
                          "created_at": "2025-01-12T11:30:00.000000Z",
                          "updated_at": "2025-01-13T14:45:00.000000Z",
                          "order_item": {
                              "id": 22,
                              "quantity": 1,
                              "price": 3999,
                              "price_formatted": "£39.99",
                              "product": {
                                  "id": 34,
                                  "name": "Wireless Mouse",
                                  "price": 3999,
                                  "price_formatted": "£39.99"
                              },
                              "order": {
                                  "id": 7,
                                  "total_amount": 3999,
                                  "total_amount_formatted": "£39.99",
                                  "user": {
                                      "id": 12,
                                      "name": "David Rodriguez",
                                      "email": "david@example.com"
                                  }
                              }
                          }
                      }
                  ],
                  "current_page": 1,
                  "per_page": 20,
                  "total": 89,
                  "last_page": 5,
                  "from": 1,
                  "to": 20,
                  "path": "https://yourapi.com/api/v1/admin/returns",
                  "first_page_url": "https://yourapi.com/api/v1/admin/returns?page=1",
                  "last_page_url": "https://yourapi.com/api/v1/admin/returns?page=5",
                  "next_page_url": "https://yourapi.com/api/v1/admin/returns?page=2",
                  "prev_page_url": null
              }
          }
        headers: []
        description: 'Return requests retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Order returns retrieved.",
              "data": {
                  "data": [],
                  "current_page": 1,
                  "per_page": 20,
                  "total": 0,
                  "last_page": 1,
                  "from": null,
                  "to": null
              }
          }
        headers: []
        description: 'No return requests found'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The status field must be one of: Requested, Under Review, Approved, Rejected, Return Shipped, Return Received, Completed, Cancelled, Pending.",
                  "The date from field must be a valid date in YYYY-MM-DD format.",
                  "The order id field must be an integer.",
                  "The user id field must be an integer."
              ]
          }
        headers: []
        description: 'Invalid filter parameters'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/returns/{returnId}/{action}'
    metadata:
      groupName: 'Return Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Review and update the status of a return request'
      description: |-
        Process a return request by changing its status through the review workflow. This endpoint
        allows administrators to move returns through different stages: review, approve, or reject.
        Status changes trigger appropriate notifications to customers and update the order processing
        workflow. Only returns in appropriate states can be transitioned to prevent invalid workflows.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      returnId:
        name: returnId
        description: 'The ID of the return request to review.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      action:
        name: action
        description: 'The action to perform on the return. Must be one of: review, approve, reject.'
        required: true
        example: approve
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      returnId: 15
      action: approve
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Return status updated to Approved.",
              "data": {
                  "id": 15,
                  "order_item_id": 25,
                  "reason": "Product damaged on arrival - speaker has crackling sound at any volume level",
                  "order_return_status_id": 3,
                  "created_at": "2025-01-15T10:30:00.000000Z",
                  "updated_at": "2025-01-15T14:45:00.000000Z"
              }
          }
        headers: []
        description: 'Return approved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Return status updated to Under Review.",
              "data": {
                  "id": 12,
                  "order_item_id": 18,
                  "reason": "Product does not match description - advertised as waterproof but failed during first use",
                  "order_return_status_id": 2,
                  "created_at": "2025-01-14T14:20:00.000000Z",
                  "updated_at": "2025-01-15T09:30:00.000000Z"
              }
          }
        headers: []
        description: 'Return moved to review'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Return status updated to Rejected.",
              "data": {
                  "id": 8,
                  "order_item_id": 22,
                  "reason": "Wrong size ordered by mistake",
                  "order_return_status_id": 4,
                  "created_at": "2025-01-12T11:30:00.000000Z",
                  "updated_at": "2025-01-15T16:15:00.000000Z"
              }
          }
        headers: []
        description: 'Return rejected'
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "Return request cannot be approved as the return window has expired."
          }
        headers: []
        description: 'Return window expired'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Return request not found."
          }
        headers: []
        description: 'Return request not found'
        custom: []
      -
        status: 409
        content: |-
          {
              "message": "Cannot modify return status as a refund has already been processed for this item."
          }
        headers: []
        description: 'Return already has refund'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Return is already processed."
          }
        headers: []
        description: 'Return already processed'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Invalid action provided."
          }
        headers: []
        description: 'Invalid action provided'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Cannot change return status from Completed to Under Review. Invalid status transition."
          }
        headers: []
        description: 'Invalid status transition'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Order is not in a state that allows returns (must be delivered or completed)."
          }
        headers: []
        description: 'Order not eligible for returns'
        custom: []
      -
        status: 500
        content: |-
          {
              "message": "An error occurred while updating the return status."
          }
        headers: []
        description: 'Status update failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
