name: 'Permission Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/permissions
    metadata:
      groupName: 'Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all permissions'
      description: |-
        Get a complete list of all permissions available in the system. Permissions define what
        actions users can perform and are assigned to roles for access control. This endpoint is
        essential for role management, security auditing, and understanding system capabilities.
        Only super admins can manage permissions to maintain system security.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permissions retrieved successfully.",
            "data": [
              {
                "id": 1,
                "name": "view_users",
                "created_at": "2024-12-01T08:00:00.000000Z",
                "updated_at": "2024-12-01T08:00:00.000000Z"
              },
              {
                "id": 2,
                "name": "create_users",
                "created_at": "2024-12-01T08:00:00.000000Z",
                "updated_at": "2024-12-01T08:00:00.000000Z"
              },
              {
                "id": 3,
                "name": "edit_users",
                "created_at": "2024-12-01T08:00:00.000000Z",
                "updated_at": "2024-12-01T08:00:00.000000Z"
              },
              {
                "id": 4,
                "name": "delete_users",
                "created_at": "2024-12-01T08:00:00.000000Z",
                "updated_at": "2024-12-01T08:00:00.000000Z"
              },
              {
                "id": 5,
                "name": "view_orders",
                "created_at": "2024-12-01T08:05:00.000000Z",
                "updated_at": "2024-12-01T08:05:00.000000Z"
              },
              {
                "id": 6,
                "name": "create_orders",
                "created_at": "2024-12-01T08:05:00.000000Z",
                "updated_at": "2024-12-01T08:05:00.000000Z"
              },
              {
                "id": 7,
                "name": "edit_orders",
                "created_at": "2024-12-01T08:05:00.000000Z",
                "updated_at": "2024-12-01T08:05:00.000000Z"
              },
              {
                "id": 8,
                "name": "delete_orders",
                "created_at": "2024-12-01T08:05:00.000000Z",
                "updated_at": "2024-12-01T08:05:00.000000Z"
              },
              {
                "id": 9,
                "name": "manage_refunds",
                "created_at": "2024-12-01T08:10:00.000000Z",
                "updated_at": "2024-12-01T08:10:00.000000Z"
              },
              {
                "id": 10,
                "name": "manage_returns",
                "created_at": "2024-12-01T08:10:00.000000Z",
                "updated_at": "2024-12-01T08:10:00.000000Z"
              },
              {
                "id": 11,
                "name": "view_products",
                "created_at": "2024-12-01T08:15:00.000000Z",
                "updated_at": "2024-12-01T08:15:00.000000Z"
              },
              {
                "id": 12,
                "name": "create_products",
                "created_at": "2024-12-01T08:15:00.000000Z",
                "updated_at": "2024-12-01T08:15:00.000000Z"
              }
            ]
          }
        headers: []
        description: 'Permissions retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Permissions retrieved successfully.",
            "data": []
          }
        headers: []
        description: 'No permissions configured'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/permissions
    metadata:
      groupName: 'Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new permission'
      description: |-
        Add a new permission to the system. Permissions should follow a consistent naming convention
        (e.g., action_resource format like "view_users", "create_orders"). Once created, permissions
        can be assigned to roles to control user access. Permission names are automatically converted
        to lowercase and must be unique across the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the permission. Should follow naming convention (action_resource). Will be converted to lowercase.'
        required: true
        example: '"create-vendor"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"create-vendor"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permission created successfully.",
            "data": {
              "id": 13,
              "name": "create-vendor",
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T14:30:00.000000Z"
            }
          }
        headers: []
        description: 'Permission created successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name field is required.",
              "The name has already been taken.",
              "The name may not be greater than 255 characters."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name has already been taken."
            ]
          }
        headers: []
        description: 'Duplicate permission name'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/permissions/{id}'
    metadata:
      groupName: 'Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing permission'
      description: |-
        Modify an existing permission name. Exercise caution when updating permissions as this
        may affect role-based access controls throughout the system. Ensure that any name changes
        are reflected in role assignments and access control logic. Permission names are automatically
        converted to lowercase and must remain unique.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the permission.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      permission:
        name: permission
        description: 'The ID of the permission to update.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      permission: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name of the permission. Should follow naming convention (action_resource). Will be converted to lowercase.'
        required: true
        example: '"create-vendor"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"create-vendor"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permission updated successfully.",
            "data": {
              "id": 13,
              "name": "create-vendor",
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T15:15:00.000000Z"
            }
          }
        headers: []
        description: 'Permission updated successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Permission] 999"
          }
        headers: []
        description: 'Permission not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name field is required.",
              "The name has already been taken.",
              "The name may not be greater than 255 characters."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name has already been taken."
            ]
          }
        headers: []
        description: 'Name already exists'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/permissions/{id}'
    metadata:
      groupName: 'Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a permission'
      description: |-
        Permanently remove a permission from the system. This action is irreversible and will
        automatically remove the permission from all roles that currently have it assigned.
        Exercise extreme caution when deleting permissions as this may break access control
        throughout the application and potentially lock users out of system features.

        **Warning**: Deleting core system permissions may cause application functionality to
        become inaccessible to all users, including administrators.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the permission.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      permission:
        name: permission
        description: 'The ID of the permission to delete.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      permission: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permission deleted successfully."
          }
        headers: []
        description: 'Permission deleted successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Permission] 999"
          }
        headers: []
        description: 'Permission not found'
        custom: []
      -
        status: 409
        content: |-
          {
            "message": "Cannot delete permission that is currently assigned to roles."
          }
        headers: []
        description: 'Permission in use'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Cannot delete core system permissions required for application functionality."
          }
        headers: []
        description: 'Core permission protection'
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while deleting the permission."
          }
        headers: []
        description: 'Deletion failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
