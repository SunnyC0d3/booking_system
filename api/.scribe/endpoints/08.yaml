name: 'Product Tag Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/product-tags
    metadata:
      groupName: 'Product Tag Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all product tags'
      description: |-
        Get a complete list of all product tags in the system. Product tags are used to label
        and categorize products for better searchability and organization. Tags help customers
        find products through filtering and search functionality. This endpoint provides
        administrators with an overview of all available tags and their usage statistics.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Tags retrieved successfully.",
              "data": [
                  {
                      "id": 1,
                      "name": "electronics",
                      "created_at": "2024-12-01T09:00:00.000000Z",
                      "updated_at": "2024-12-01T09:00:00.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "wireless",
                      "created_at": "2024-12-01T09:05:00.000000Z",
                      "updated_at": "2024-12-01T09:05:00.000000Z"
                  },
                  {
                      "id": 3,
                      "name": "bluetooth",
                      "created_at": "2024-12-01T09:10:00.000000Z",
                      "updated_at": "2024-12-01T09:10:00.000000Z"
                  },
                  {
                      "id": 4,
                      "name": "waterproof",
                      "created_at": "2024-12-01T09:15:00.000000Z",
                      "updated_at": "2024-12-01T09:15:00.000000Z"
                  },
                  {
                      "id": 5,
                      "name": "premium",
                      "created_at": "2024-12-01T09:20:00.000000Z",
                      "updated_at": "2024-12-01T09:20:00.000000Z"
                  },
                  {
                      "id": 6,
                      "name": "noise-cancelling",
                      "created_at": "2024-12-01T09:25:00.000000Z",
                      "updated_at": "2024-12-01T09:25:00.000000Z"
                  },
                  {
                      "id": 7,
                      "name": "portable",
                      "created_at": "2024-12-01T09:30:00.000000Z",
                      "updated_at": "2024-12-01T09:30:00.000000Z"
                  },
                  {
                      "id": 8,
                      "name": "gaming",
                      "created_at": "2024-12-01T09:35:00.000000Z",
                      "updated_at": "2024-12-01T09:35:00.000000Z"
                  }
              ]
          }
        headers: []
        description: 'Product tags retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Tags retrieved successfully.",
              "data": []
          }
        headers: []
        description: 'No tags found'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/product-tags
    metadata:
      groupName: 'Product Tag Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product tag'
      description: |-
        Add a new product tag to the system. Tags should be descriptive, concise, and follow
        consistent naming conventions (typically lowercase, hyphen-separated for multi-word tags).
        Once created, tags can be assigned to products to improve searchability and organization.
        Tag names must be unique across the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product tag. Should be descriptive and follow naming conventions (lowercase, hyphen-separated).'
        required: true
        example: '"wireless-charging"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"wireless-charging"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Tag created successfully.",
              "data": {
                  "id": 9,
                  "name": "wireless-charging",
                  "created_at": "2025-01-16T14:30:00.000000Z",
                  "updated_at": "2025-01-16T14:30:00.000000Z"
              }
          }
        headers: []
        description: 'Product tag created successfully'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The name field is required.",
                  "The name has already been taken.",
                  "The name may not be greater than 255 characters."
              ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The name has already been taken."
              ]
          }
        headers: []
        description: 'Duplicate tag name'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/product-tags/{productTag_id}'
    metadata:
      groupName: 'Product Tag Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific product tag'
      description: |-
        Get detailed information about a specific product tag including its associated products.
        This endpoint is useful for examining tag usage and understanding which products are
        currently tagged with specific labels. Helpful for tag management and optimization.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      productTag_id:
        name: productTag_id
        description: 'The ID of the productTag.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      productTag:
        name: productTag
        description: 'The ID of the product tag to retrieve.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      productTag_id: 1
      productTag: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Tag retrieved successfully.",
              "data": {
                  "id": 9,
                  "name": "wireless-charging",
                  "products": [
                      {
                          "id": 15,
                          "name": "Wireless Bluetooth Headphones",
                          "price": 7999,
                          "price_formatted": "£79.99",
                          "created_at": "2025-01-10T14:30:00.000000Z"
                      },
                      {
                          "id": 23,
                          "name": "Smartphone Wireless Charger",
                          "price": 2999,
                          "price_formatted": "£29.99",
                          "created_at": "2025-01-12T16:20:00.000000Z"
                      }
                  ],
                  "products_count": 2,
                  "created_at": "2025-01-16T14:30:00.000000Z",
                  "updated_at": "2025-01-16T14:30:00.000000Z"
              }
          }
        headers: []
        description: 'Product tag found with associated products'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Tag retrieved successfully.",
              "data": {
                  "id": 9,
                  "name": "wireless-charging",
                  "products": [],
                  "products_count": 0,
                  "created_at": "2025-01-16T14:30:00.000000Z",
                  "updated_at": "2025-01-16T14:30:00.000000Z"
              }
          }
        headers: []
        description: 'Product tag with no associated products'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\ProductTag] 999"
          }
        headers: []
        description: 'Product tag not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/product-tags/{productTag_id}'
    metadata:
      groupName: 'Product Tag Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing product tag'
      description: |-
        Modify an existing product tag name. Exercise caution when updating tags as they may
        be referenced by multiple products and affect search functionality. Ensure that any
        name changes maintain consistency with existing tagging conventions and don't create
        confusion for customers or administrators.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      productTag_id:
        name: productTag_id
        description: 'The ID of the productTag.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      productTag:
        name: productTag
        description: 'The ID of the product tag to update.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      productTag_id: 1
      productTag: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name of the product tag. Must be unique and follow naming conventions.'
        required: true
        example: '"fast-wireless-charging"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"fast-wireless-charging"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Tag updated successfully.",
              "data": {
                  "id": 9,
                  "name": "fast-wireless-charging",
                  "created_at": "2025-01-16T14:30:00.000000Z",
                  "updated_at": "2025-01-16T15:45:00.000000Z"
              }
          }
        headers: []
        description: 'Product tag updated successfully'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\ProductTag] 999"
          }
        headers: []
        description: 'Product tag not found'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The name field is required.",
                  "The name has already been taken.",
                  "The name may not be greater than 255 characters."
              ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The name has already been taken."
              ]
          }
        headers: []
        description: 'Name already exists'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/product-tags/{productTag_id}'
    metadata:
      groupName: 'Product Tag Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a product tag'
      description: |-
        Permanently remove a product tag from the system. This action is irreversible and will
        automatically remove the tag from all products that currently have it assigned. Before
        deletion, consider the impact on product searchability and organization. Customers may
        no longer be able to find products using this tag for filtering or search.

        **Warning**: Deleting a widely-used tag may significantly affect product discoverability
        and customer search experience.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      productTag_id:
        name: productTag_id
        description: 'The ID of the productTag.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      productTag:
        name: productTag
        description: 'The ID of the product tag to delete.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      productTag_id: 1
      productTag: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Tag deleted successfully."
          }
        headers: []
        description: 'Product tag deleted successfully'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\ProductTag] 999"
          }
        headers: []
        description: 'Product tag not found'
        custom: []
      -
        status: 409
        content: |-
          {
              "message": "Cannot delete product tag that is currently assigned to products. Please remove the tag from all products first."
          }
        headers: []
        description: 'Tag in use by products'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "This tag is currently being used by active products and cannot be deleted."
          }
        headers: []
        description: 'Tag has dependencies'
        custom: []
      -
        status: 500
        content: |-
          {
              "message": "An error occurred while deleting the product tag."
          }
        headers: []
        description: 'Deletion failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
