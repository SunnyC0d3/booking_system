name: 'Role Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/roles
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all user roles'
      description: |-
        Get a complete list of all user roles in the system. Roles define user access levels and permissions
        within the application. This endpoint is essential for user management, access control configuration,
        and understanding the system's permission structure. Only administrators with proper permissions
        can view roles to maintain system security.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Roles retrieved successfully.",
            "data": [
              {
                "id": 1,
                "name": "super_admin",
                "created_at": "2024-12-01T08:00:00.000000Z",
                "updated_at": "2024-12-01T08:00:00.000000Z"
              },
              {
                "id": 2,
                "name": "admin",
                "created_at": "2024-12-01T08:05:00.000000Z",
                "updated_at": "2024-12-01T08:05:00.000000Z"
              },
              {
                "id": 3,
                "name": "manager",
                "created_at": "2024-12-01T08:10:00.000000Z",
                "updated_at": "2024-12-01T08:10:00.000000Z"
              },
              {
                "id": 4,
                "name": "customer_service",
                "created_at": "2024-12-01T08:15:00.000000Z",
                "updated_at": "2024-12-01T08:15:00.000000Z"
              },
              {
                "id": 5,
                "name": "vendor",
                "created_at": "2024-12-01T08:20:00.000000Z",
                "updated_at": "2024-12-01T08:20:00.000000Z"
              },
              {
                "id": 6,
                "name": "user",
                "created_at": "2024-12-01T08:25:00.000000Z",
                "updated_at": "2024-12-01T08:25:00.000000Z"
              }
            ]
          }
        headers: []
        description: 'Roles retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Roles retrieved successfully.",
            "data": []
          }
        headers: []
        description: 'No roles configured'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/roles
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new user role'
      description: |-
        Add a new role to the system for user access control. Roles define what permissions users have
        and what actions they can perform within the application. Role names should follow a consistent
        naming convention (lowercase, underscore-separated) and must be unique. Once created, roles can
        be assigned to users and configured with specific permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the role. Should follow naming convention (lowercase, underscore-separated). Will be converted to lowercase automatically.'
        required: true
        example: customer_service
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: customer_service
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role created successfully.",
            "data": {
              "id": 7,
              "name": "customer_service",
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T14:30:00.000000Z"
            }
          }
        headers: []
        description: 'Role created successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name field is required.",
              "The name has already been taken.",
              "The name may not be greater than 255 characters."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name has already been taken."
            ]
          }
        headers: []
        description: 'Duplicate role name'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing role'
      description: |-
        Modify an existing role name in the system. Exercise caution when updating roles as this may
        affect user access throughout the application. Ensure that any name changes are reflected in
        user assignments and access control logic. Role names are automatically converted to lowercase
        and must remain unique across all roles.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The ID of the role to update.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9
      role: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name of the role. Should follow naming convention (lowercase, underscore-separated). Will be converted to lowercase automatically.'
        required: true
        example: senior_customer_service
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: senior_customer_service
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role updated successfully.",
            "data": {
              "id": 7,
              "name": "senior_customer_service",
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T15:15:00.000000Z"
            }
          }
        headers: []
        description: 'Role updated successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Role] 999"
          }
        headers: []
        description: 'Role not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name field is required.",
              "The name has already been taken.",
              "The name may not be greater than 255 characters."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The name has already been taken."
            ]
          }
        headers: []
        description: 'Name already exists'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a role'
      description: |-
        Permanently remove a role from the system. This action is irreversible and will affect all users
        currently assigned to this role. Before deletion, ensure that users with this role are reassigned
        to appropriate alternative roles to maintain proper access control. Exercise extreme caution when
        deleting roles as this may impact user access throughout the application.

        **Warning**: Deleting a role that is currently assigned to users may leave those users without
        proper access permissions, potentially locking them out of system features.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The ID of the role to delete.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9
      role: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role deleted successfully."
          }
        headers: []
        description: 'Role deleted successfully'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Role] 999"
          }
        headers: []
        description: 'Role not found'
        custom: []
      -
        status: 409
        content: |-
          {
            "message": "Cannot delete role that is currently assigned to users."
          }
        headers: []
        description: 'Role in use by users'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Cannot delete core system roles required for application functionality."
          }
        headers: []
        description: 'Core role protection'
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while deleting the role."
          }
        headers: []
        description: 'Deletion failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
