name: 'Role Permission Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/admin/roles/{role_id}/permissions'
    metadata:
      groupName: 'Role Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all permissions for a specific role'
      description: |-
        Get a complete list of permissions assigned to a specific role. This endpoint is essential for
        understanding what actions users with this role can perform within the system. It provides
        administrators with visibility into the current permission structure and helps with access
        control auditing and role management decisions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The ID of the role to retrieve permissions for.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
      role: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permissions retrieved successfully.",
            "data": {
              "role": "manager",
              "permissions": [
                "view_users",
                "create_users",
                "edit_users",
                "view_orders",
                "create_orders",
                "edit_orders",
                "view_products",
                "create_products",
                "edit_products",
                "view_vendors",
                "manage_returns",
                "view_payments"
              ]
            }
          }
        headers: []
        description: 'Permissions retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Permissions retrieved successfully.",
            "data": {
              "role": "new_role",
              "permissions": []
            }
          }
        headers: []
        description: 'Role with no permissions'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Role] 999"
          }
        headers: []
        description: 'Role not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/roles/{role_id}/permissions'
    metadata:
      groupName: 'Role Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign specific permissions to a role'
      description: |-
        Grant specific permissions to a role, enabling users with that role to perform the associated
        actions. This endpoint allows fine-grained control over role capabilities by selectively
        assigning permissions. Permissions are added to existing ones (not replaced), so you can
        incrementally build up role permissions without losing previously assigned ones.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The ID of the role to assign permissions to.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
      role: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permissions:
        name: permissions
        description: 'List of permission names to assign to the role. All permission names must exist in the system.'
        required: true
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'permissions.*':
        name: 'permissions.*'
        description: 'The name of each permission to assign. Must be exact permission names as stored in the database.'
        required: true
        example: '"view_users"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      permissions:
        - architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permissions assigned successfully.",
            "data": {
              "role": "manager",
              "assigned_permissions": [
                "delete_users",
                "manage_refunds",
                "view_reports"
              ],
              "total_permissions": 15
            }
          }
        headers: []
        description: 'Permissions assigned successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Permissions assigned successfully.",
            "data": {
              "role": "manager",
              "assigned_permissions": [],
              "note": "All specified permissions were already assigned to this role",
              "total_permissions": 12
            }
          }
        headers: []
        description: 'Permissions already assigned'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Role] 999"
          }
        headers: []
        description: 'Role not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The permissions field is required.",
              "The permissions must be an array.",
              "The permissions.0 is invalid. Permission 'invalid_permission' does not exist.",
              "The permissions.1 is invalid. Permission 'another_invalid' does not exist."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "The following permissions do not exist: invalid_permission, fake_permission"
            ]
          }
        headers: []
        description: 'Invalid permission names'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/roles/{role_id}/permissions/assign-all'
    metadata:
      groupName: 'Role Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign all available permissions to a role'
      description: |-
        Grant all permissions in the system to a specific role, effectively creating a "super" role with
        complete access to all system functionality. Use this endpoint with extreme caution as it provides
        unrestricted access to all features. This is typically used for super administrator roles or during
        initial system setup. The operation will assign every permission that exists in the system.

        **Warning**: This gives complete system access to users with this role. Ensure this is intentional
        and that the role is assigned only to trusted administrators.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The ID of the role to assign all permissions to.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
      role: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "All permissions assigned successfully.",
            "data": {
              "role": "super_admin",
              "total_permissions_assigned": 47,
              "newly_assigned": 12,
              "already_assigned": 35,
              "permissions": [
                "view_users",
                "create_users",
                "edit_users",
                "delete_users",
                "view_orders",
                "create_orders",
                "edit_orders",
                "delete_orders",
                "view_products",
                "create_products",
                "edit_products",
                "delete_products",
                "view_vendors",
                "create_vendors",
                "edit_vendors",
                "delete_vendors",
                "view_payments",
                "manage_refunds",
                "manage_returns",
                "view_roles",
                "create_roles",
                "edit_roles",
                "delete_roles",
                "view_permissions",
                "create_permissions",
                "edit_permissions",
                "delete_permissions",
                "view_reports",
                "export_data",
                "import_data",
                "system_settings",
                "user_management",
                "security_settings"
              ]
            }
          }
        headers: []
        description: 'All permissions assigned successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "All permissions assigned successfully.",
            "data": {
              "role": "super_admin",
              "total_permissions_assigned": 47,
              "newly_assigned": 0,
              "already_assigned": 47,
              "note": "Role already had all available permissions"
            }
          }
        headers: []
        description: 'Role already has all permissions'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Role] 999"
          }
        headers: []
        description: 'Role not found'
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while assigning all permissions to the role."
          }
        headers: []
        description: 'Assignment failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/roles/{role_id}/permissions/{permission_id}'
    metadata:
      groupName: 'Role Permission Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Revoke a specific permission from a role'
      description: |-
        Remove a specific permission from a role, preventing users with that role from performing the
        associated action. This endpoint provides fine-grained control over role capabilities by allowing
        selective removal of permissions. Use this when you need to restrict access to specific features
        for users with a particular role while maintaining their other permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      permission_id:
        name: permission_id
        description: 'The ID of the permission.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The ID of the role to revoke the permission from.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      permission:
        name: permission
        description: 'The ID of the permission to revoke from the role.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
      permission_id: 1
      role: 3
      permission: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Permission revoked successfully.",
            "data": {
              "role": "manager",
              "revoked_permission": "delete_users",
              "remaining_permissions_count": 11,
              "remaining_permissions": [
                "view_users",
                "create_users",
                "edit_users",
                "view_orders",
                "create_orders",
                "edit_orders",
                "view_products",
                "create_products",
                "edit_products",
                "view_vendors",
                "manage_returns"
              ]
            }
          }
        headers: []
        description: 'Permission revoked successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Permission revoked successfully.",
            "data": {
              "role": "manager",
              "permission": "super_admin_only",
              "note": "Permission was not assigned to this role",
              "remaining_permissions_count": 12
            }
          }
        headers: []
        description: 'Permission was not assigned'
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Role] 999"
          }
        headers: []
        description: 'Role not found'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Permission] 999"
          }
        headers: []
        description: 'Permission not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Cannot revoke core system permissions that are required for role functionality."
          }
        headers: []
        description: 'Cannot revoke core permission'
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while revoking the permission from the role."
          }
        headers: []
        description: 'Revocation failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
