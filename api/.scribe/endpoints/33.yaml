name: 'Public Review Responses'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/reviews/{review_id}/responses'
    metadata:
      groupName: 'Public Review Responses'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all responses for a specific review (Public viewing)'
      description: |-
        Retrieve all approved vendor responses for a specific review.
        This endpoint is publicly accessible and does not require authentication.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      review_id:
        name: review_id
        description: 'The ID of the review.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      review:
        name: review
        description: 'The ID of the review.'
        required: true
        example: 123
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      review_id: 5
      review: 123
    queryParameters:
      per_page:
        name: per_page
        description: 'optional Number of responses per page (1-50). Default: 15.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'optional Page number for pagination. Default: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 20
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Review responses retrieved successfully.",
            "data": {
              "data": [
                {
                  "id": 45,
                  "vendor": {
                    "id": 15,
                    "name": "Tech Haven"
                  },
                  "content": "Thank you for your feedback! We're glad you enjoyed our product.",
                  "created_at": "2025-01-16T14:30:00.000000Z"
                }
              ],
              "current_page": 1,
              "per_page": 15,
              "total": 2,
              "last_page": 1
            }
          }
        headers: []
        description: 'Responses retrieved successfully'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reviews/{review_id}/responses/{response_id}'
    metadata:
      groupName: 'Public Review Responses'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get individual response details (Public viewing)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      review_id:
        name: review_id
        description: 'The ID of the review.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      response_id:
        name: response_id
        description: 'The ID of the response.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      review:
        name: review
        description: 'The ID of the review.'
        required: true
        example: 123
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      response:
        name: response
        description: 'The ID of the response.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      review_id: 5
      response_id: 2
      review: 123
      response: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":2,"vendor":{"id":1,"name":"Fashion Forward","description":null},"user":{"id":1,"name":"Clifford Vendor Representative"},"content":"Honestly such an amazing products.","is_approved":true,"approved_at":"2025-07-16T11:50:44.000000Z","created_at":"2025-07-16T11:50:44.000000Z","updated_at":"2025-07-16T11:50:44.000000Z"},"message":"Response retrieved successfully.","status":200}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '5'
          x-ratelimit-remaining: '4'
          x-ratelimit-reset: '1752766931'
          x-content-type-options: nosniff
          x-frame-options: DENY
          x-xss-protection: '1; mode=block'
          content-security-policy: "default-src 'none'; frame-ancestors 'none';"
          referrer-policy: strict-origin-when-cross-origin
          permissions-policy: 'camera=(), microphone=(), geolocation=(), payment=()'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
