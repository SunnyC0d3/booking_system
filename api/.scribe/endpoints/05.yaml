name: 'Product Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/products
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of products with enhanced search'
      description: |-
        Get a comprehensive paginated list of all products in the system with advanced filtering capabilities.
        This endpoint provides administrators with complete product information including variants, media,
        categories, tags, vendor details, relevance scoring, and faceted search results.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      filter:
        name: filter
        description: 'optional Array of filter parameters to narrow down results.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[search]':
        name: 'filter[search]'
        description: 'optional Advanced search across product names and descriptions with relevance scoring.'
        required: false
        example: 'wireless bluetooth headphones'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'optional Filter products by name (partial match supported).'
        required: false
        example: wireless
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[price]':
        name: 'filter[price]'
        description: 'optional Filter by price range in pounds. Single value or comma-separated min,max.'
        required: false
        example: '10.00,50.00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[priceRanges]':
        name: 'filter[priceRanges]'
        description: 'optional Multiple price ranges separated by commas.'
        required: false
        example: '0-25,50-100,200-500'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[category]':
        name: 'filter[category]'
        description: 'optional Filter by category ID(s) including child categories.'
        required: false
        example: '5,12,18'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[availability]':
        name: 'filter[availability]'
        description: 'optional Filter by stock status. Options: in_stock, out_of_stock, low_stock, available.'
        required: false
        example: in_stock
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[vendors]':
        name: 'filter[vendors]'
        description: 'optional Filter by vendor ID(s).'
        required: false
        example: '2,5,8'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[vendor]':
        name: 'filter[vendor]'
        description: 'optional Filter by vendor name (partial match).'
        required: false
        example: apple
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[tags]':
        name: 'filter[tags]'
        description: 'optional Filter by tag ID(s) with logic support.'
        required: false
        example: '3,7,12'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[attributes]':
        name: 'filter[attributes]'
        description: 'optional Filter by product attributes. Format: attribute:value,attribute:value.'
        required: false
        example: 'color:red,size:large'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'optional Filter by product status.'
        required: false
        example: Active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[quantity]':
        name: 'filter[quantity]'
        description: 'optional Filter by quantity range. Single value or min,max.'
        required: false
        example: '10,100'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[created_at]':
        name: 'filter[created_at]'
        description: 'optional Filter by creation date range (YYYY-MM-DD).'
        required: false
        example: '2025-01-01,2025-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[updated_at]':
        name: 'filter[updated_at]'
        description: 'optional Filter by update date range (YYYY-MM-DD).'
        required: false
        example: '2025-01-01,2025-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[include]':
        name: 'filter[include]'
        description: 'optional Include related data. Options: vendor,variants,category,tags,media.'
        required: false
        example: 'vendor,variants,category'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'optional Page number for pagination. Default: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Number of products per page (max 100). Default: 15.'
        required: false
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: "optional Sort products. Prefix with '-' for descending. Available: name, price, quantity, created_at, updated_at, relevance."
        required: false
        example: '-relevance,price'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      diversify:
        name: diversify
        description: 'optional Apply result diversification to avoid too many similar products. Default: false.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      explain:
        name: explain
        description: 'optional Include search explanations for debugging. Default: false.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      filter:
        - architecto
      'filter[search]': 'wireless bluetooth headphones'
      'filter[name]': wireless
      'filter[price]': '10.00,50.00'
      'filter[priceRanges]': '0-25,50-100,200-500'
      'filter[category]': '5,12,18'
      'filter[availability]': in_stock
      'filter[vendors]': '2,5,8'
      'filter[vendor]': apple
      'filter[tags]': '3,7,12'
      'filter[attributes]': 'color:red,size:large'
      'filter[status]': Active
      'filter[quantity]': '10,100'
      'filter[created_at]': '2025-01-01,2025-01-31'
      'filter[updated_at]': '2025-01-01,2025-01-31'
      'filter[include]': 'vendor,variants,category'
      page: 2
      per_page: 24
      sort: '-relevance,price'
      diversify: true
      explain: true
    bodyParameters:
      filter:
        name: filter
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.name:
        name: filter.name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.search:
        name: filter.search
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.price:
        name: filter.price
        description: 'Must match the regex /^\d+(\.\d{1,2})?(,\d+(\.\d{1,2})?)*$/.'
        required: false
        example: '9,3.1)'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.priceRanges:
        name: filter.priceRanges
        description: 'Must match the regex /^(\d+(\.\d{1,2})?-\d+(\.\d{1,2})?)(,\d+(\.\d{1,2})?-\d+(\.\d{1,2})?)*$/.'
        required: false
        example: '-1.42)-3268)'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.category:
        name: filter.category
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.categories:
        name: filter.categories
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.quantity:
        name: filter.quantity
        description: 'Must match the regex /^\d+(,\d+)?$/.'
        required: false
        example: '64'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.availability:
        name: filter.availability
        description: ''
        required: false
        example: low_stock
        type: string
        enumValues:
          - in_stock
          - out_of_stock
          - low_stock
          - available
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.vendors:
        name: filter.vendors
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.vendor:
        name: filter.vendor
        description: 'Must not be greater than 255 characters.'
        required: false
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.brand:
        name: filter.brand
        description: 'Must not be greater than 255 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.brands:
        name: filter.brands
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.tags:
        name: filter.tags
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.tag_logic:
        name: filter.tag_logic
        description: ''
        required: false
        example: OR
        type: string
        enumValues:
          - AND
          - OR
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.attributes:
        name: filter.attributes
        description: 'Must match the regex /^([a-zA-Z_]+:[a-zA-Z0-9_\-\s]+)(,[a-zA-Z_]+:[a-zA-Z0-9_\-\s]+)*$/.'
        required: false
        example: '_JK:AI'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.color:
        name: filter.color
        description: 'Must not be greater than 50 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.colors:
        name: filter.colors
        description: 'Must match the regex /^([a-zA-Z]+,?)+$/.'
        required: false
        example: dLJnIk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.size:
        name: filter.size
        description: 'Must not be greater than 50 characters.'
        required: false
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.sizes:
        name: filter.sizes
        description: 'Must match the regex /^([a-zA-Z0-9]+,?)+$/.'
        required: false
        example: DDz1Ys
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.material:
        name: filter.material
        description: 'Must not be greater than 100 characters.'
        required: false
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.status:
        name: filter.status
        description: 'Must not be greater than 50 characters.'
        required: false
        example: w
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.created_at:
        name: filter.created_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '2559-31-42'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.updated_at:
        name: filter.updated_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '2559-31-42'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.include:
        name: filter.include
        description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
        required: false
        example: 'uw,pw,lvq,wrsitc,pscqld,zsnrwt,ujwv'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
        required: false
        example: 'y8p,Bm,-dp,-Zm,-GH'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      diversify:
        name: diversify
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      explain:
        name: explain
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      facets:
        name: facets
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      highlight:
        name: highlight
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      personalize:
        name: personalize
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      typo_tolerance:
        name: typo_tolerance
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      exact_match:
        name: exact_match
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      boost_new_products:
        name: boost_new_products
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      boost_in_stock:
        name: boost_in_stock
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      filter:
        name: b
        search: 'n'
        price: '9,3.1)'
        priceRanges: '-1.42)-3268)'
        category: '9,31'
        categories: '9,31'
        quantity: '64'
        availability: low_stock
        vendors: '9,31'
        vendor: i
        brand: k
        brands: '9,31'
        tags: '9,31'
        tag_logic: OR
        attributes: '_JK:AI'
        color: k
        colors: dLJnIk
        size: h
        sizes: DDz1Ys
        material: h
        status: w
        created_at: '2559-31-42'
        updated_at: '2559-31-42'
        include: 'uw,pw,lvq,wrsitc,pscqld,zsnrwt,ujwv'
      page: 4
      per_page: 9
      sort: 'y8p,Bm,-dp,-Zm,-GH'
      diversify: true
      explain: false
      facets: false
      highlight: true
      personalize: false
      typo_tolerance: false
      exact_match: false
      boost_new_products: true
      boost_in_stock: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/products/{id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific product with enhanced data'
      description: |-
        Get detailed information about a specific product including all variants, media, category details,
        vendor information, tags, search metadata, and administrative information. This endpoint provides
        complete product data needed for product management, editing, and detailed analysis.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product:
        name: product
        description: 'The ID of the product to retrieve.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      product: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/products
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product with enhanced features'
      description: |-
        Add a new product to the system with complete details including variants, tags, media, and search optimization.
        Products are automatically assigned to the vendor associated with the authenticated admin user.
        Supports secure file uploads and automatic search keyword generation for optimal findability.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The product name. Will be used for display and search optimization.'
        required: true
        example: '"Premium Wireless Earbuds Pro"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional Detailed product description. Supports basic HTML tags and is used for search indexing.'
        required: false
        example: '"High-quality wireless earbuds with advanced noise cancellation and 30-hour battery life."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      price:
        name: price
        description: 'Product price in pounds. Will be converted to pennies for storage.'
        required: true
        example: '89.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_category_id:
        name: product_category_id
        description: 'The category ID this product belongs to.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_status_id:
        name: product_status_id
        description: 'The status ID for this product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Available stock quantity.'
        required: true
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_tags:
        name: product_tags
        description: 'optional Array of tag IDs to associate with this product for better searchability.'
        required: false
        example:
          - 3
          - 7
          - 12
          - 18
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_variants:
        name: product_variants
        description: 'optional Array of product variants with enhanced attributes.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media:
        name: media
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.featured_image:
        name: media.featured_image
        description: 'optional Featured product image. Max 5MB, dimensions 100x100 to 4000x4000px.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].product_attribute_id':
        name: 'product_variants[].product_attribute_id'
        description: 'The <code>id</code> of an existing record in the product_attributes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].value':
        name: 'product_variants[].value'
        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].additional_price':
        name: 'product_variants[].additional_price'
        description: 'Must be at least 0.'
        required: false
        example: 84
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].quantity':
        name: 'product_variants[].quantity'
        description: 'Must be at least 0.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.gallery:
        name: media.gallery
        description: 'optional Gallery images. Each max 5MB, dimensions 100x100 to 4000x4000px.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      low_stock_threshold:
        name: low_stock_threshold
        description: 'optional Low stock alert threshold. Default: 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.product_attribute_id':
        name: 'product_variants.*.product_attribute_id'
        description: 'The attribute ID for this variant.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.value':
        name: 'product_variants.*.value'
        description: 'The value for this variant.'
        required: true
        example: '"Midnight Black"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.additional_price':
        name: 'product_variants.*.additional_price'
        description: 'optional Additional price for this variant in pounds.'
        required: false
        example: '10.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.quantity':
        name: 'product_variants.*.quantity'
        description: 'Stock quantity for this variant.'
        required: true
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.low_stock_threshold':
        name: 'product_variants.*.low_stock_threshold'
        description: 'optional Low stock threshold for this variant. Default: 5.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Premium Wireless Earbuds Pro"'
      description: '"High-quality wireless earbuds with advanced noise cancellation and 30-hour battery life."'
      price: '89.99'
      product_category_id: 5
      product_status_id: 1
      quantity: 50
      product_tags:
        - 3
        - 7
        - 12
        - 18
      product_variants:
        - architecto
      low_stock_threshold: 5
    fileParameters:
      media:
        featured_image: null
        gallery:
          - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/products/{id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing product with enhanced features'
      description: |-
        Modify an existing product's details including variants, tags, media, and search optimization.
        This endpoint supports partial updates - only provided fields will be updated. When updating variants,
        all existing variants are replaced with the new ones. Search keywords are automatically regenerated
        for optimal findability.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product:
        name: product
        description: 'The ID of the product to update.'
        required: true
        example: 47
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      product: 47
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'optional The updated product name.'
        required: false
        example: '"Premium Wireless Earbuds Pro Max"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional Updated product description with search optimization.'
        required: false
        example: '"Enhanced wireless earbuds with improved noise cancellation and extended battery life."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      price:
        name: price
        description: 'optional Updated price in pounds.'
        required: false
        example: '99.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_category_id:
        name: product_category_id
        description: 'optional Updated category ID.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_status_id:
        name: product_status_id
        description: 'optional Updated status ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'optional Updated stock quantity.'
        required: false
        example: 75
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_tags:
        name: product_tags
        description: 'optional Updated array of tag IDs for better search optimization.'
        required: false
        example:
          - 3
          - 7
          - 12
          - 18
          - 22
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_variants:
        name: product_variants
        description: 'optional Updated array of variants (replaces existing).'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media:
        name: media
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.featured_image:
        name: media.featured_image
        description: 'optional New featured image (replaces existing).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].product_attribute_id':
        name: 'product_variants[].product_attribute_id'
        description: 'The <code>id</code> of an existing record in the product_attributes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].value':
        name: 'product_variants[].value'
        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].additional_price':
        name: 'product_variants[].additional_price'
        description: 'Must be at least 0.'
        required: false
        example: 84
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].quantity':
        name: 'product_variants[].quantity'
        description: 'Must be at least 0.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.gallery:
        name: media.gallery
        description: 'optional New gallery images (replaces existing).'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      low_stock_threshold:
        name: low_stock_threshold
        description: 'optional Updated low stock threshold.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.product_attribute_id':
        name: 'product_variants.*.product_attribute_id'
        description: 'Attribute ID for variant.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.value':
        name: 'product_variants.*.value'
        description: 'Variant value.'
        required: true
        example: '"Pearl White"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.additional_price':
        name: 'product_variants.*.additional_price'
        description: 'optional Additional price in pounds.'
        required: false
        example: '15.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.quantity':
        name: 'product_variants.*.quantity'
        description: 'Variant stock quantity.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'product_variants.*.low_stock_threshold':
        name: 'product_variants.*.low_stock_threshold'
        description: 'optional Variant low stock threshold.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Premium Wireless Earbuds Pro Max"'
      description: '"Enhanced wireless earbuds with improved noise cancellation and extended battery life."'
      price: '99.99'
      product_category_id: 6
      product_status_id: 1
      quantity: 75
      product_tags:
        - 3
        - 7
        - 12
        - 18
        - 22
      product_variants:
        - architecto
      low_stock_threshold: 8
    fileParameters:
      media:
        featured_image: null
        gallery:
          - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/products/soft-destroy/{product_id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete a product with search index update'
      description: |-
        Soft delete a product, making it inactive but preserving the data for potential recovery.
        Soft deleted products are hidden from public listings but remain in the database for
        administrative purposes and order history integrity. Search indexes are updated automatically.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product:
        name: product
        description: 'The ID of the product to soft delete.'
        required: true
        example: 47
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
      product: 47
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/products/{id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a product with complete cleanup'
      description: |-
        Permanently remove a product from the database. This action is irreversible and will
        also remove all associated variants, media files, tag associations, and search indexes.
        The product must be soft deleted first before it can be permanently deleted.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the soft deleted product to permanently delete.'
        required: true
        example: 47
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 47
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/products/{id}/restore'
    metadata:
      groupName: 'Product Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft deleted product with search optimization'
      description: |-
        Restore a previously soft deleted product, making it active again in the system.
        Only products that have been soft deleted can be restored. Search indexes are
        automatically updated to include the restored product.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the soft deleted product to restore.'
        required: true
        example: 47
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 47
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
