name: 'User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/users
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of users with advanced filtering'
      description: |-
        Get a comprehensive paginated list of all users in the system with advanced filtering capabilities.
        This endpoint provides administrators with complete user information including personal details,
        addresses, role assignments, vendor associations, and account status. Essential for user management,
        administrative oversight, customer service, and system analytics. Supports powerful filtering and
        search functionality to help administrators quickly find specific users or user groups.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      filter:
        name: filter
        description: 'optional Array of filter parameters to narrow down results.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'optional Filter users by name (partial match supported).'
        required: false
        example: john
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'optional Filter users by email address (partial match supported).'
        required: false
        example: '@gmail.com'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[search]':
        name: 'filter[search]'
        description: 'optional Search across user names and email addresses.'
        required: false
        example: 'sarah johnson'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[role]':
        name: 'filter[role]'
        description: 'optional Filter by role ID(s). Single ID or comma-separated multiple IDs.'
        required: false
        example: '3,5,7'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[created_at]':
        name: 'filter[created_at]'
        description: 'optional Filter by registration date. Single date or comma-separated date range (YYYY-MM-DD).'
        required: false
        example: '2025-01-01,2025-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[updated_at]':
        name: 'filter[updated_at]'
        description: 'optional Filter by last update date. Single date or comma-separated date range (YYYY-MM-DD).'
        required: false
        example: '2024-12-01,2025-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[include]':
        name: 'filter[include]'
        description: 'optional Include related data. Options: role,vendors,userAddress.'
        required: false
        example: 'role,vendors,userAddress'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'optional Page number for pagination. Default: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Number of users per page (max 100). Default: 15.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: "optional Sort users. Prefix with '-' for descending. Available: name, email, created_at, updated_at."
        required: false
        example: '-created_at,name'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      filter:
        - architecto
      'filter[name]': john
      'filter[email]': '@gmail.com'
      'filter[search]': 'sarah johnson'
      'filter[role]': '3,5,7'
      'filter[created_at]': '2025-01-01,2025-01-31'
      'filter[updated_at]': '2024-12-01,2025-01-31'
      'filter[include]': 'role,vendors,userAddress'
      page: 2
      per_page: 25
      sort: '-created_at,name'
    bodyParameters:
      filter:
        name: filter
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.name:
        name: filter.name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.email:
        name: filter.email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.role:
        name: filter.role
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.created_at:
        name: filter.created_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '2559-31-42'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.updated_at:
        name: filter.updated_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '2559-31-42'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.search:
        name: filter.search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.include:
        name: filter.include
        description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
        required: false
        example: 'uw,pw,lvq,wrsitc,pscqld,zsnrwt,ujwv'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
        required: false
        example: 'y8p,Bm,-dp,-Zm,-GH'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      filter:
        name: b
        email: zbailey@example.net
        role: '9,31'
        created_at: '2559-31-42'
        updated_at: '2559-31-42'
        search: h
        include: 'uw,pw,lvq,wrsitc,pscqld,zsnrwt,ujwv'
      page: 4
      per_page: 9
      sort: 'y8p,Bm,-dp,-Zm,-GH'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users retrieved successfully.",
              "data": {
                  "data": [
                      {
                          "id": 123,
                          "name": "Sarah Johnson",
                          "email": "sarah.johnson@example.com",
                          "email_verified_at": "2025-01-10T08:00:00.000000Z",
                          "stripe_customer_id": "cus_1234567890abcdef",
                          "password_changed_at": "2025-01-01T12:00:00.000000Z",
                          "last_login_at": "2025-01-16T09:15:00.000000Z",
                          "last_login_ip": "192.168.1.100",
                          "created_at": "2024-12-15T10:30:00.000000Z",
                          "updated_at": "2025-01-16T09:15:00.000000Z",
                          "deleted_at": null,
                          "user_address": {
                              "id": 45,
                              "address_line1": "123 Oak Street",
                              "address_line2": "Apartment 4B",
                              "city": "London",
                              "state": "England",
                              "country": "United Kingdom",
                              "postal_code": "SW1A 1AA"
                          },
                          "role": {
                              "id": 6,
                              "name": "user"
                          },
                          "vendors": [
                              {
                                  "id": 12,
                                  "name": "Sarah's Boutique",
                                  "description": "Handcrafted jewelry and accessories",
                                  "logo": "https://yourapi.com/storage/vendor-logos/sarahs-boutique.jpg",
                                  "created_at": "2025-01-05T14:20:00.000000Z"
                              }
                          ]
                      },
                      {
                          "id": 89,
                          "name": "Michael Chen",
                          "email": "michael.chen@example.com",
                          "email_verified_at": "2025-01-08T12:00:00.000000Z",
                          "stripe_customer_id": "cus_9876543210fedcba",
                          "password_changed_at": "2024-12-20T15:30:00.000000Z",
                          "last_login_at": "2025-01-15T14:45:00.000000Z",
                          "last_login_ip": "203.0.113.42",
                          "created_at": "2024-11-20T16:45:00.000000Z",
                          "updated_at": "2025-01-15T14:45:00.000000Z",
                          "deleted_at": null,
                          "user_address": {
                              "id": 67,
                              "address_line1": "456 Pine Avenue",
                              "address_line2": null,
                              "city": "Manchester",
                              "state": "Greater Manchester",
                              "country": "United Kingdom",
                              "postal_code": "M1 1AA"
                          },
                          "role": {
                              "id": 3,
                              "name": "manager"
                          },
                          "vendors": []
                      },
                      {
                          "id": 45,
                          "name": "Emma Wilson",
                          "email": "emma.wilson@example.com",
                          "email_verified_at": "2025-01-05T14:00:00.000000Z",
                          "stripe_customer_id": null,
                          "password_changed_at": "2025-01-05T14:15:00.000000Z",
                          "last_login_at": "2025-01-14T11:20:00.000000Z",
                          "last_login_ip": "198.51.100.23",
                          "created_at": "2025-01-05T14:00:00.000000Z",
                          "updated_at": "2025-01-14T11:20:00.000000Z",
                          "deleted_at": null,
                          "user_address": null,
                          "role": {
                              "id": 4,
                              "name": "customer_service"
                          },
                          "vendors": []
                      }
                  ],
                  "current_page": 1,
                  "per_page": 15,
                  "total": 1247,
                  "last_page": 84,
                  "from": 1,
                  "to": 15,
                  "path": "https://yourapi.com/api/v1/admin/users",
                  "first_page_url": "https://yourapi.com/api/v1/admin/users?page=1",
                  "last_page_url": "https://yourapi.com/api/v1/admin/users?page=84",
                  "next_page_url": "https://yourapi.com/api/v1/admin/users?page=2",
                  "prev_page_url": null
              }
          }
        headers: []
        description: 'Users retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Users retrieved successfully.",
              "data": {
                  "data": [
                      {
                          "id": 67,
                          "name": "David Rodriguez",
                          "email": "david@techcorp.com",
                          "role": {
                              "id": 2,
                              "name": "admin"
                          },
                          "vendors": [],
                          "last_login_at": "2025-01-16T08:30:00.000000Z"
                      }
                  ],
                  "current_page": 1,
                  "per_page": 15,
                  "total": 8,
                  "last_page": 1
              }
          }
        headers: []
        description: 'Filtered users by role'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "Users retrieved successfully.",
              "data": {
                  "data": [],
                  "current_page": 1,
                  "per_page": 15,
                  "total": 0,
                  "last_page": 1,
                  "from": null,
                  "to": null
              }
          }
        headers: []
        description: 'No users found'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The filter.email must be a valid email format.",
                  "The filter.role field must contain only comma-separated numbers.",
                  "The filter.created_at field must be a valid date or date range in YYYY-MM-DD format."
              ]
          }
        headers: []
        description: 'Invalid filter parameters'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Retrieve a specific user's detailed information"
      description: |-
        Get comprehensive information about a specific user including personal details, address,
        role assignments, vendor associations, and account status. This endpoint provides administrators
        with complete visibility into user accounts for customer service, account management, and
        administrative oversight purposes.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 76
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The ID of the user to retrieve.'
        required: true
        example: 123
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 76
      user: 123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User details retrieved.",
              "data": {
                  "id": 123,
                  "name": "Sarah Johnson",
                  "email": "sarah.johnson@example.com",
                  "email_verified_at": "2025-01-10T08:00:00.000000Z",
                  "stripe_customer_id": "cus_1234567890abcdef",
                  "password_changed_at": "2025-01-01T12:00:00.000000Z",
                  "last_login_at": "2025-01-16T09:15:00.000000Z",
                  "last_login_ip": "192.168.1.100",
                  "created_at": "2024-12-15T10:30:00.000000Z",
                  "updated_at": "2025-01-16T09:15:00.000000Z",
                  "deleted_at": null,
                  "user_address": {
                      "id": 45,
                      "address_line1": "123 Oak Street",
                      "address_line2": "Apartment 4B",
                      "city": "London",
                      "state": "England",
                      "country": "United Kingdom",
                      "postal_code": "SW1A 1AA"
                  },
                  "role": {
                      "id": 6,
                      "name": "user"
                  },
                  "vendors": [
                      {
                          "id": 12,
                          "name": "Sarah's Boutique",
                          "description": "Handcrafted jewelry and accessories",
                          "logo": "https://yourapi.com/storage/vendor-logos/sarahs-boutique.jpg",
                          "products_count": 23,
                          "created_at": "2025-01-05T14:20:00.000000Z",
                          "updated_at": "2025-01-15T16:45:00.000000Z"
                      }
                  ]
              }
          }
        headers: []
        description: 'User details retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "User details retrieved.",
              "data": {
                  "id": 89,
                  "name": "John Doe",
                  "email": "john.doe@example.com",
                  "email_verified_at": "2025-01-12T10:00:00.000000Z",
                  "stripe_customer_id": null,
                  "last_login_at": "2025-01-15T16:30:00.000000Z",
                  "user_address": null,
                  "role": {
                      "id": 6,
                      "name": "user"
                  },
                  "vendors": []
              }
          }
        headers: []
        description: 'User without address or vendors'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\User] 999"
          }
        headers: []
        description: 'User not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/users
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new user account'
      description: |-
        Create a new user account with complete profile information including personal details, address,
        and role assignment. This endpoint allows administrators to onboard new users directly into the
        system with predefined access levels. The created user will receive appropriate notifications
        and can immediately begin using the system with their assigned role permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name. Will be automatically formatted with proper capitalization."
        required: true
        example: 'Sarah Jane Johnson'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address. Must be unique across all users."
        required: true
        example: sarah.johnson@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's initial password. Must meet security requirements (minimum 8 characters)."
        required: true
        example: SecurePassword123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role_id:
        name: role_id
        description: 'The role ID to assign to the user. Must be a valid role that exists in the system.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'Complete address information for the user.'
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line1:
        name: address.address_line1
        description: 'Primary address line.'
        required: true
        example: '123 Oak Street'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.city:
        name: address.city
        description: 'City name.'
        required: true
        example: London
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.country:
        name: address.country
        description: 'Country name.'
        required: true
        example: 'United Kingdom'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.postal_code:
        name: address.postal_code
        description: 'Postal or ZIP code.'
        required: true
        example: 'SW1A 1AA'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.address_line2:
        name: address.address_line2
        description: 'optional Secondary address line (apartment, suite, etc.).'
        required: false
        example: 'Apartment 4B'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      address.state:
        name: address.state
        description: 'optional State, region, or county.'
        required: false
        example: England
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Sarah Jane Johnson'
      email: sarah.johnson@example.com
      password: SecurePassword123!
      role_id: 6
      address:
        address_line1: '123 Oak Street'
        city: London
        country: 'United Kingdom'
        postal_code: 'SW1A 1AA'
        address_line2: 'Apartment 4B'
        state: England
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User created successfully!",
              "data": {
                  "id": 156,
                  "name": "Sarah Jane Johnson",
                  "email": "sarah.johnson@example.com",
                  "email_verified_at": null,
                  "stripe_customer_id": null,
                  "password_changed_at": null,
                  "last_login_at": null,
                  "last_login_ip": null,
                  "created_at": "2025-01-16T14:30:00.000000Z",
                  "updated_at": "2025-01-16T14:30:00.000000Z",
                  "deleted_at": null,
                  "user_address": {
                      "id": 89,
                      "address_line1": "123 Oak Street",
                      "address_line2": "Apartment 4B",
                      "city": "London",
                      "state": "England",
                      "country": "United Kingdom",
                      "postal_code": "SW1A 1AA"
                  },
                  "role": {
                      "id": 6,
                      "name": "user"
                  },
                  "vendors": []
              }
          }
        headers: []
        description: 'User created successfully'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The name field is required.",
                  "The email has already been taken.",
                  "The password must be at least 8 characters.",
                  "The role id must exist in roles table.",
                  "The address.address_line1 field is required.",
                  "The address.city field is required.",
                  "The address.country field is required.",
                  "The address.postal_code field is required."
              ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The email has already been taken."
              ]
          }
        headers: []
        description: 'Duplicate email address'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The selected role id is invalid."
              ]
          }
        headers: []
        description: 'Invalid role assignment'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update an existing user's information"
      description: |-
        Modify an existing user's profile information including personal details, address, role assignment,
        and password. This endpoint supports partial updates - only provided fields will be updated, others
        remain unchanged. Administrators can update any user's information including role changes and
        password resets for customer service and account management purposes.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 76
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The ID of the user to update.'
        required: true
        example: 123
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 76
      user: 123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "optional The user's updated full name. Will be automatically formatted with proper capitalization."
        required: false
        example: 'Sarah Jane Johnson-Smith'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "optional The user's updated email address. Must be unique across all users."
        required: false
        example: sarah.johnson.new@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'optional New password for the user. Must be at least 8 characters. Useful for admin password resets.'
        required: false
        example: NewSecurePassword456!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      role_id:
        name: role_id
        description: 'optional Updated role ID for the user. Must be a valid role that exists in the system.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'optional Updated address information. If provided, all address fields are required.'
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line1:
        name: address.address_line1
        description: 'Primary address line when address is provided.'
        required: true
        example: '456 Maple Avenue'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.city:
        name: address.city
        description: 'City name when address is provided.'
        required: true
        example: Manchester
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.country:
        name: address.country
        description: 'Country name when address is provided.'
        required: true
        example: 'United Kingdom'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.postal_code:
        name: address.postal_code
        description: 'Postal or ZIP code when address is provided.'
        required: true
        example: 'M1 1AA'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address.address_line2:
        name: address.address_line2
        description: 'optional Secondary address line.'
        required: false
        example: 'Suite 201'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      address.state:
        name: address.state
        description: 'optional State, region, or county.'
        required: false
        example: 'Greater Manchester'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Sarah Jane Johnson-Smith'
      email: sarah.johnson.new@example.com
      password: NewSecurePassword456!
      role_id: 3
      address:
        address_line1: '456 Maple Avenue'
        city: Manchester
        country: 'United Kingdom'
        postal_code: 'M1 1AA'
        address_line2: 'Suite 201'
        state: 'Greater Manchester'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User updated successfully.",
              "data": {
                  "id": 123,
                  "name": "Sarah Jane Johnson-Smith",
                  "email": "sarah.johnson.new@example.com",
                  "email_verified_at": "2025-01-10T08:00:00.000000Z",
                  "stripe_customer_id": "cus_1234567890abcdef",
                  "password_changed_at": "2025-01-16T15:30:00.000000Z",
                  "last_login_at": "2025-01-16T09:15:00.000000Z",
                  "last_login_ip": "192.168.1.100",
                  "created_at": "2024-12-15T10:30:00.000000Z",
                  "updated_at": "2025-01-16T15:30:00.000000Z",
                  "deleted_at": null,
                  "user_address": {
                      "id": 45,
                      "address_line1": "456 Maple Avenue",
                      "address_line2": "Suite 201",
                      "city": "Manchester",
                      "state": "Greater Manchester",
                      "country": "United Kingdom",
                      "postal_code": "M1 1AA"
                  },
                  "role": {
                      "id": 3,
                      "name": "manager"
                  },
                  "vendors": [
                      {
                          "id": 12,
                          "name": "Sarah's Boutique",
                          "description": "Handcrafted jewelry and accessories"
                      }
                  ]
              }
          }
        headers: []
        description: 'User updated successfully'
        custom: []
      -
        status: 200
        content: |-
          {
              "message": "User updated successfully.",
              "data": {
                  "id": 123,
                  "name": "Sarah Johnson",
                  "email": "sarah.johnson@example.com",
                  "role": {
                      "id": 4,
                      "name": "customer_service"
                  },
                  "updated_at": "2025-01-16T15:45:00.000000Z"
              }
          }
        headers: []
        description: 'Partial update (role change only)'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\User] 999"
          }
        headers: []
        description: 'User not found'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The email has already been taken.",
                  "The password must be at least 8 characters.",
                  "The role id must exist in roles table.",
                  "The address.address_line1 field is required when address is present.",
                  "The address.city field is required when address is present.",
                  "The address.country field is required when address is present.",
                  "The address.postal_code field is required when address is present."
              ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The email has already been taken."
              ]
          }
        headers: []
        description: 'Duplicate email address'
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": [
                  "The selected role id is invalid."
              ]
          }
        headers: []
        description: 'Invalid role assignment'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a user account'
      description: |-
        Permanently remove a user account from the system along with their associated address information.
        This action is irreversible and will completely remove the user's data from the database.
        Exercise extreme caution when deleting users as this may affect order history, vendor relationships,
        and system audit trails. Consider deactivating accounts instead of deletion for data integrity.

        **Warning**: This permanently deletes all user data including address information. Order history
        and other related records may be affected. Ensure this action is intentional and authorized.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 76
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The ID of the user to permanently delete.'
        required: true
        example: 123
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 76
      user: 123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User deleted successfully."
          }
        headers: []
        description: 'User deleted successfully'
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: 'Insufficient permissions'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\User] 999"
          }
        headers: []
        description: 'User not found'
        custom: []
      -
        status: 409
        content: |-
          {
              "message": "Cannot delete user with active orders or vendor associations. Please transfer or resolve dependencies first."
          }
        headers: []
        description: 'User has dependencies'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Cannot delete system administrator accounts or users with special privileges."
          }
        headers: []
        description: 'Protected user account'
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "User has active sessions. Please revoke all tokens and sessions before deletion."
          }
        headers: []
        description: 'User has active sessions'
        custom: []
      -
        status: 500
        content: |-
          {
              "message": "An error occurred while deleting the user account."
          }
        headers: []
        description: 'Deletion failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
