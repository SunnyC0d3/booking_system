name: 'Shopping Cart'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/cart
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Retrieve user's shopping cart"
      description: |-
        Get the current cart contents for the authenticated user or guest session.
        Returns cart items with product details, pricing information, availability status,
        and total calculations. Supports both authenticated users and guest sessions.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Cart retrieved successfully.",
            "data": {
              "id": 12,
              "user_id": 123,
              "total_amount": 15998,
              "total_amount_formatted": "£159.98",
              "total_items_count": 3,
              "expires_at": "2025-02-15T10:30:00.000000Z",
              "is_expired": false,
              "is_empty": false,
              "items": [
                {
                  "id": 45,
                  "product_id": 15,
                  "product_variant_id": 24,
                  "quantity": 2,
                  "price_snapshot": 7999,
                  "price_formatted": "£79.99",
                  "line_total": 15998,
                  "line_total_formatted": "£159.98",
                  "current_price": 7999,
                  "has_price_changed": false,
                  "is_available": true,
                  "available_stock": 20,
                  "product": {
                    "id": 15,
                    "name": "Wireless Bluetooth Headphones",
                    "description": "Premium quality wireless headphones",
                    "price": 7499,
                    "price_formatted": "£74.99",
                    "featured_image": "https://yourapi.com/storage/products/headphones.jpg",
                    "status": "Active"
                  },
                  "product_variant": {
                    "id": 24,
                    "value": "White",
                    "additional_price": 500,
                    "additional_price_formatted": "£5.00",
                    "quantity": 20,
                    "product_attribute": {
                      "id": 1,
                      "name": "Color"
                    }
                  },
                  "created_at": "2025-01-16T14:30:00.000000Z",
                  "updated_at": "2025-01-16T14:30:00.000000Z"
                }
              ],
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T14:35:00.000000Z"
            }
          }
        headers: []
        description: 'Cart retrieved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Cart retrieved successfully.",
            "data": {
              "id": 13,
              "user_id": 123,
              "total_amount": 0,
              "total_amount_formatted": "£0.00",
              "total_items_count": 0,
              "expires_at": "2025-02-15T10:30:00.000000Z",
              "is_expired": false,
              "is_empty": true,
              "items": [],
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T14:30:00.000000Z"
            }
          }
        headers: []
        description: 'Empty cart'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cart/items
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add item to shopping cart'
      description: |-
        Add a product (with optional variant) to the user's shopping cart. If the item already exists,
        the quantities will be combined. Validates product availability, stock levels, and pricing.
        Supports both authenticated users and guest sessions.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: 'The ID of the product to add to cart.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_variant_id:
        name: product_variant_id
        description: 'optional The ID of the product variant (for products with variants like color, size).'
        required: false
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      quantity:
        name: quantity
        description: 'The quantity to add to cart (1-999).'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: 15
      product_variant_id: 24
      quantity: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Item added to cart successfully.",
            "data": {
              "id": 12,
              "user_id": 123,
              "total_amount": 15998,
              "total_amount_formatted": "£159.98",
              "total_items_count": 2,
              "expires_at": "2025-02-15T10:30:00.000000Z",
              "is_expired": false,
              "is_empty": false,
              "items": [
                {
                  "id": 45,
                  "product_id": 15,
                  "product_variant_id": 24,
                  "quantity": 2,
                  "price_snapshot": 7999,
                  "price_formatted": "£79.99",
                  "line_total": 15998,
                  "line_total_formatted": "£159.98",
                  "current_price": 7999,
                  "has_price_changed": false,
                  "is_available": true,
                  "available_stock": 18,
                  "product": {
                    "id": 15,
                    "name": "Wireless Bluetooth Headphones",
                    "status": "Active"
                  },
                  "product_variant": {
                    "id": 24,
                    "value": "White",
                    "additional_price": 500,
                    "quantity": 18
                  }
                }
              ]
            }
          }
        headers: []
        description: 'Item added successfully'
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Product is not available for purchase."
          }
        headers: []
        description: 'Product not available'
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Insufficient stock. Only 5 items available."
          }
        headers: []
        description: 'Insufficient stock'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "The selected product is not available."
          }
        headers: []
        description: 'Product not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "Please select a product to add to cart.",
              "Quantity must be at least 1.",
              "The selected product variant does not belong to the specified product."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/cart/items/{cartItem}'
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update cart item quantity'
      description: |-
        Update the quantity of a specific item in the cart. Setting quantity to 0 will remove
        the item from the cart. Validates stock availability and updates pricing to current
        product price if it has changed since adding to cart.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      cartItem:
        name: cartItem
        description: 'The ID of the cart item to update.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      cartItem: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantity:
        name: quantity
        description: 'The new quantity for the cart item (0 to remove).'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      quantity: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Cart updated successfully.",
            "data": {
              "id": 12,
              "user_id": 123,
              "total_amount": 23997,
              "total_amount_formatted": "£239.97",
              "total_items_count": 3,
              "expires_at": "2025-02-15T10:30:00.000000Z",
              "is_expired": false,
              "is_empty": false,
              "items": [
                {
                  "id": 45,
                  "product_id": 15,
                  "product_variant_id": 24,
                  "quantity": 3,
                  "price_snapshot": 7999,
                  "price_formatted": "£79.99",
                  "line_total": 23997,
                  "line_total_formatted": "£239.97",
                  "current_price": 7999,
                  "has_price_changed": false,
                  "is_available": true,
                  "available_stock": 17
                }
              ]
            }
          }
        headers: []
        description: 'Cart item updated successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Cart updated successfully.",
            "data": {
              "id": 12,
              "total_amount": 0,
              "total_amount_formatted": "£0.00",
              "total_items_count": 0,
              "is_empty": true,
              "items": []
            }
          }
        headers: []
        description: 'Item removed (quantity set to 0)'
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Insufficient stock. Only 2 items available."
          }
        headers: []
        description: 'Insufficient stock'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\CartItem] 999"
          }
        headers: []
        description: 'Cart item not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": [
              "Please specify the quantity.",
              "Cannot have more than 999 items of the same product."
            ]
          }
        headers: []
        description: 'Validation errors'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/cart/items/{cartItem}'
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove item from cart'
      description: |-
        Remove a specific item completely from the shopping cart. This action cannot be undone.
        The cart totals and item count will be automatically recalculated.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      cartItem:
        name: cartItem
        description: 'The ID of the cart item to remove.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      cartItem: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Item removed from cart successfully.",
            "data": {
              "id": 12,
              "user_id": 123,
              "total_amount": 7999,
              "total_amount_formatted": "£79.99",
              "total_items_count": 1,
              "expires_at": "2025-02-15T10:30:00.000000Z",
              "is_expired": false,
              "is_empty": false,
              "items": [
                {
                  "id": 46,
                  "product_id": 22,
                  "quantity": 1,
                  "line_total": 7999,
                  "line_total_formatted": "£79.99"
                }
              ]
            }
          }
        headers: []
        description: 'Item removed successfully'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\CartItem] 999"
          }
        headers: []
        description: 'Cart item not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/cart/clear
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Clear entire cart'
      description: |-
        Remove all items from the shopping cart. This action cannot be undone and will result
        in an empty cart. Useful for starting over or clearing expired/unavailable items.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Cart cleared successfully.",
            "data": {
              "id": 12,
              "user_id": 123,
              "total_amount": 0,
              "total_amount_formatted": "£0.00",
              "total_items_count": 0,
              "expires_at": "2025-02-15T10:30:00.000000Z",
              "is_expired": false,
              "is_empty": true,
              "items": [],
              "created_at": "2025-01-16T14:30:00.000000Z",
              "updated_at": "2025-01-16T14:45:00.000000Z"
            }
          }
        headers: []
        description: 'Cart cleared successfully'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cart/sync-prices
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Synchronize cart prices'
      description: |-
        Update all cart item prices to match current product prices. This is useful when
        product prices have changed since items were added to the cart. Returns information
        about which items had price changes.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Cart prices synchronized. 2 items updated.",
            "data": {
              "id": 12,
              "user_id": 123,
              "total_amount": 17998,
              "total_amount_formatted": "£179.98",
              "total_items_count": 2,
              "items": [
                {
                  "id": 45,
                  "product_id": 15,
                  "quantity": 2,
                  "price_snapshot": 8999,
                  "price_formatted": "£89.99",
                  "line_total": 17998,
                  "line_total_formatted": "£179.98",
                  "current_price": 8999,
                  "has_price_changed": false,
                  "price_change": 1000
                }
              ]
            }
          }
        headers: []
        description: 'Prices synchronized successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Cart prices synchronized. 0 items updated.",
            "data": {
              "id": 12,
              "total_amount": 15998,
              "total_amount_formatted": "£159.98",
              "items": []
            }
          }
        headers: []
        description: 'No price changes'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
