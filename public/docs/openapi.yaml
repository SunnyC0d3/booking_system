openapi: 3.0.3
info:
  title: 'E-Commerce API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://marketplace.com'
paths:
  /api/register:
    post:
      summary: 'Register a new user and return their API token.'
      operationId: registerANewUserAndReturnTheirAPIToken
      description: "This endpoint is used to register a new user, including their name, email, password,\nand password confirmation."
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  message: 'User registered successfully'
                  status: 200
                properties:
                  data:
                    type: array
                    example: []
                  message:
                    type: string
                    example: 'User registered successfully'
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The user's full name."
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password. Must be at least 8 characters."
                  example: password123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must match the password field.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'Login a user.'
      operationId: loginAUser
      description: 'Authenticates a user with email and password. Returns an API token with expiry timer.'
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"data\": {\n      \"token_type\": \"Bearer,\n      \"token\": \"{YOUR_AUTH_KEY}\",\n      \"expires_in\": \"{YOUR_EXPIRY_TIMER}\"\n  },\n  \"message\": \"Authenticated\",\n  \"status\": 200\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid credentials'
                  status: 401
                properties:
                  message:
                    type: string
                    example: 'Invalid credentials'
                  status:
                    type: integer
                    example: 401
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: password123
                  nullable: false
                remember:
                  type: boolean
                  description: 'optional Whether to remember the user.'
                  example: true
                  nullable: true
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Logout a user.'
      operationId: logoutAUser
      description: 'Logs out the currently authenticated user by invalidating their API token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User logged out successfully'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'User logged out successfully'
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
  '/api/email/verify/{id}/{hash}':
    get:
      summary: "Verify a user's email address."
      operationId: verifyAUsersEmailAddress
      description: 'Once a user registers, a notification is sent out to their specified email address, which requires them to verify.'
      parameters:
        -
          in: query
          name: id
          description: "The user's id."
          example: '1'
          required: true
          schema:
            type: string
            description: "The user's id."
            example: '1'
            nullable: false
        -
          in: query
          name: hash
          description: 'The hash to verify the email.'
          example: '1234567890'
          required: true
          schema:
            type: string
            description: 'The hash to verify the email.'
            example: '1234567890'
            nullable: false
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'Redirected to specified URL'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid/Expired url provided.'
                  status: 401
                properties:
                  message:
                    type: string
                    example: 'Invalid/Expired url provided.'
                  status:
                    type: integer
                    example: 401
      tags:
        - 'Email Verification'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: ea
        required: true
        schema:
          type: string
  /api/email/resend:
    get:
      summary: 'Resend email to user.'
      operationId: resendEmailToUser
      description: 'Once a user registers, a notification is sent out to their specified email address, which requires them to verify. Incase they dont recieve one, they can request again.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email verification link sent on your email id.'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'Email verification link sent on your email id.'
                  status:
                    type: integer
                    example: 200
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email already verified.'
                  status: 400
                properties:
                  message:
                    type: string
                    example: 'Email already verified.'
                  status:
                    type: integer
                    example: 400
      tags:
        - 'Email Verification'
      security: []
  /api/forgot-password:
    post:
      summary: 'Request a password reset link.'
      operationId: requestAPasswordResetLink
      description: 'Sends a password reset email to the specified email address.'
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset link sent.'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'Password reset link sent.'
                  status:
                    type: integer
                    example: 200
        400:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"message\": {ERROR_MESSAGE},\n  \"status\": 400\n}"
      tags:
        - 'Password Reset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
              required:
                - email
  /api/reset-password:
    post:
      summary: "Reset a user's password."
      operationId: resetAUsersPassword
      description: "Resets the user's password using the provided reset token."
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password has been reset.'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'Password has been reset.'
                  status:
                    type: integer
                    example: 200
        400:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"message\": {ERROR_MESSAGE},\n  \"status\": 400\n}"
      tags:
        - 'Password Reset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The password reset token.'
                  example: abc123
                  nullable: false
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The new password.'
                  example: newpassword123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must match the password.'
                  example: newpassword123
                  nullable: false
              required:
                - token
                - email
                - password
                - password_confirmation
  /api/admin/product-attributes:
    get:
      summary: 'Retrieve all product attributes.'
      operationId: retrieveAllProductAttributes
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attributes retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Attributes retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
    post:
      summary: 'Create a new product attribute.'
      operationId: createANewProductAttribute
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product attribute created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product attribute created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the product attribute.'
                  example: '"Color"'
                  nullable: false
              required:
                - name
  '/api/admin/product-attributes/{productAttribute_id}':
    get:
      summary: 'Retrieve a specific product attribute.'
      operationId: retrieveASpecificProductAttribute
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attribute retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Attribute retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
    post:
      summary: 'Update a product attribute.'
      operationId: updateAProductAttribute
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product attribute updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product attribute updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the product attribute.'
                  example: '"Size"'
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a product attribute.'
      operationId: deleteAProductAttribute
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product attribute deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product attribute deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-categories:
    get:
      summary: 'Get all product categories'
      operationId: getAllProductCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Categories retrieved successfully.'
                  data:
                    -
                      id: 1
                      name: Electronics
                      children: []
                properties:
                  message:
                    type: string
                    example: 'Categories retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Electronics
                        children: []
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Electronics
                        children:
                          type: array
                          example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
    post:
      summary: 'Store a new product category'
      operationId: storeANewProductCategory
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category created successfully.'
                  data:
                    id: 2
                    name: Laptops
                    parent_id: 1
                properties:
                  message:
                    type: string
                    example: 'Category created successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: Laptops
                      parent_id:
                        type: integer
                        example: 1
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: eos
                  nullable: false
                parent_id:
                  type: integer
                  description: 'optional The ID of the parent category.'
                  example: 14
                  nullable: true
              required:
                - name
  '/api/admin/product-categories/{productCategory_id}':
    get:
      summary: 'Get a specific product category'
      operationId: getASpecificProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category retrieved successfully.'
                  data:
                    id: 1
                    name: Electronics
                    children: []
                properties:
                  message:
                    type: string
                    example: 'Category retrieved successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Electronics
                      children:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
    post:
      summary: 'Update a product category'
      operationId: updateAProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category updated successfully.'
                  data:
                    id: 1
                    name: 'Updated Category Name'
                    parent_id: null
                properties:
                  message:
                    type: string
                    example: 'Category updated successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Updated Category Name'
                      parent_id:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: ea
                  nullable: false
                parent_id:
                  type: integer
                  description: 'optional The ID of the parent category.'
                  example: 17
                  nullable: true
              required:
                - name
    delete:
      summary: 'Delete a product category'
      operationId: deleteAProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Category deleted successfully'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot delete a category with subcategories'
                properties:
                  message:
                    type: string
                    example: 'Cannot delete a category with subcategories'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
    parameters:
      -
        in: path
        name: productCategory_id
        description: 'The ID of the productCategory.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-statuses:
    get:
      summary: 'Retrieve all product statuses.'
      operationId: retrieveAllProductStatuses
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Statuses retrieved successfully.'
                  data:
                    -
                      id: 1
                      name: Available
                    -
                      id: 2
                      name: 'Out of Stock'
                properties:
                  message:
                    type: string
                    example: 'Statuses retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Available
                      -
                        id: 2
                        name: 'Out of Stock'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Available
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Statuses'
    post:
      summary: 'Create a new product status.'
      operationId: createANewProductStatus
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product status created successfully.'
                  data:
                    id: 3
                    name: Discontinued
                properties:
                  message:
                    type: string
                    example: 'Product status created successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: Discontinued
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Statuses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the product status.'
                  example: perferendis
                  nullable: false
              required:
                - name
  '/api/admin/product-statuses/{productStatus_id}':
    get:
      summary: 'Retrieve a specific product status.'
      operationId: retrieveASpecificProductStatus
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Status retrieved successfully.'
                  data:
                    id: 1
                    name: Available
                properties:
                  message:
                    type: string
                    example: 'Status retrieved successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Available
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Statuses'
    post:
      summary: 'Update an existing product status.'
      operationId: updateAnExistingProductStatus
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product status updated successfully.'
                  data:
                    id: 1
                    name: Unavailable
                properties:
                  message:
                    type: string
                    example: 'Product status updated successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Unavailable
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Statuses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the product status.'
                  example: delectus
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a product status.'
      operationId: deleteAProductStatus
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product status deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product status deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Statuses'
    parameters:
      -
        in: path
        name: productStatus_id
        description: 'The ID of the productStatus.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-tags:
    get:
      summary: 'Retrieve all product tags.'
      operationId: retrieveAllProductTags
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tags retrieved successfully.'
                  data:
                    -
                      id: 1
                      name: Electronics
                    -
                      id: 2
                      name: Fashion
                properties:
                  message:
                    type: string
                    example: 'Tags retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Electronics
                      -
                        id: 2
                        name: Fashion
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Electronics
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
    post:
      summary: 'Create a new product tag.'
      operationId: createANewProductTag
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag created successfully.'
                  data:
                    id: 3
                    name: 'Home Appliances'
                properties:
                  message:
                    type: string
                    example: 'Tag created successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Home Appliances'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the product tag.'
                  example: deserunt
                  nullable: false
              required:
                - name
  '/api/admin/product-tags/{productTag_id}':
    get:
      summary: 'Retrieve a specific product tag.'
      operationId: retrieveASpecificProductTag
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag retrieved successfully.'
                  data:
                    id: 1
                    name: Electronics
                properties:
                  message:
                    type: string
                    example: 'Tag retrieved successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Electronics
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
    post:
      summary: 'Update an existing product tag.'
      operationId: updateAnExistingProductTag
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag updated successfully.'
                  data:
                    id: 1
                    name: Gadgets
                properties:
                  message:
                    type: string
                    example: 'Tag updated successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Gadgets
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the product tag.'
                  example: optio
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a product tag.'
      operationId: deleteAProductTag
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Tag deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
    parameters:
      -
        in: path
        name: productTag_id
        description: 'The ID of the productTag.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/products:
    get:
      summary: 'Retrieve a paginated list of products.'
      operationId: retrieveAPaginatedListOfProducts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Products retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Products retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: lgllnvqgjmmgupaqrqvzlmfy
                      nullable: false
                    price:
                      type: string
                      description: 'Must match the regex /^\d+(\.\d{1,2})?(,\d+(\.\d{1,2})?)*$/.'
                      example: 562152.89)))))))
                      nullable: false
                    category:
                      type: string
                      description: 'Must match the regex /^(\d,?)+$/.'
                      example: '8'
                      nullable: false
                    quantity:
                      type: integer
                      description: 'Must be at least 0.'
                      example: 66
                      nullable: false
                    created_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '8109-15-20'
                      nullable: false
                    updated_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '1721-78-93'
                      nullable: false
                    search:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: rtlo
                      nullable: false
                    include:
                      type: string
                      description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
                      example: 'cp,ubbatrd,g)'
                      nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 43
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 6
                  nullable: false
                sort:
                  type: string
                  description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
                  example: '-_,-I,-x,-j'
                  nullable: false
    post:
      summary: 'Create a new product.'
      operationId: createANewProduct
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hfgurtpjoepssqizxbl
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Velit alias quaerat est soluta.'
                  nullable: true
                price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 47
                  nullable: false
                product_category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_categories table.'
                  example: assumenda
                  nullable: false
                product_status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_statuses table.'
                  example: consectetur
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 52
                  nullable: false
                product_tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the product_tags table.'
                  example: null
                  items:
                    type: string
                product_variants:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      product_attribute_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the product_attributes table.'
                        example: earum
                        nullable: false
                      value:
                        type: string
                        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
                        example: ld
                        nullable: false
                      additional_price:
                        type: number
                        description: 'Must be at least 0.'
                        example: 85
                        nullable: true
                      quantity:
                        type: integer
                        description: 'Must be at least 0.'
                        example: 58
                        nullable: false
                    required:
                      - product_attribute_id
                      - quantity
                media:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    featured_image:
                      type: string
                      format: binary
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      nullable: false
                    gallery:
                      type: array
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      items:
                        type: string
                        format: binary
              required:
                - name
                - price
                - product_category_id
                - product_status_id
                - quantity
  '/api/admin/products/{id}':
    get:
      summary: 'Retrieve a specific product.'
      operationId: retrieveASpecificProduct
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    post:
      summary: 'Update an existing product.'
      operationId: updateAnExistingProduct
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ogjsupfvkfqcrhtnmx
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Autem esse eum dolor et eum odio.'
                  nullable: true
                price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 20
                  nullable: false
                product_category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_categories table.'
                  example: incidunt
                  nullable: false
                product_status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_statuses table.'
                  example: nihil
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 2
                  nullable: false
                product_tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the product_tags table.'
                  example: null
                  items:
                    type: string
                product_variants:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      product_attribute_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the product_attributes table.'
                        example: modi
                        nullable: false
                      value:
                        type: string
                        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
                        example: fpw
                        nullable: false
                      additional_price:
                        type: number
                        description: 'Must be at least 0.'
                        example: 10
                        nullable: true
                      quantity:
                        type: integer
                        description: 'Must be at least 0.'
                        example: 34
                        nullable: false
                    required:
                      - product_attribute_id
                      - quantity
                media:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    featured_image:
                      type: string
                      format: binary
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      nullable: true
                    gallery:
                      type: array
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      items:
                        type: string
                        format: binary
              required:
                - name
                - price
                - product_category_id
                - product_status_id
                - quantity
    delete:
      summary: 'Permanently delete a product.'
      operationId: permanentlyDeleteAProduct
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/products/soft-destroy/{product_id}':
    delete:
      summary: 'Soft delete a product.'
      operationId: softDeleteAProduct
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/users:
    get:
      summary: 'Retrieve a paginated list of users.'
      operationId: retrieveAPaginatedListOfUsers
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Users retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: uqgwyebw
                      nullable: false
                    email:
                      type: string
                      description: 'Must be a valid email address. Must not be greater than 255 characters.'
                      example: terry.kali@example.net
                      nullable: false
                    role:
                      type: string
                      description: 'Must match the regex /^(\d,?)+$/.'
                      example: '8,4,9,9,1,4'
                      nullable: false
                    created_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '0083-49-49'
                      nullable: false
                    updated_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '5673-95-00,1509-17-25'
                      nullable: false
                    search:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: sgyqjzjhptksnmuhaqxoeq
                      nullable: false
                    include:
                      type: string
                      description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
                      example: 'fkowk,stvltkbwn,huic,gxzwwsgd,dgozojtay,vah,ipdodnxsi,ae)'
                      nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 49
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 21
                  nullable: false
                sort:
                  type: string
                  description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
                  example: '-x,-L,-D,-B,X'
                  nullable: false
    post:
      summary: 'Create a new user.'
      operationId: createANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users created successfully!'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Users created successfully!'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: myxcvgiegyhuaotwber
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: berta.kuhic@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '~5z?@}hqy+=sA(dAAZii'
                  nullable: false
                role_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: quas
                  nullable: false
                address:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    address_line1:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: tkapmsdgbxyabptzt
                      nullable: false
                    city:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: yyhcuagapzjxxrqaul
                      nullable: false
                    country:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: xdvzxqleyigfdp
                      nullable: false
                    postal_code:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: jvuveegliixzvtlattrz
                      nullable: false
                    address_line2:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: qmskkbcpeju
                      nullable: true
                    state:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: fxbzycjlwwqfftruxvdhyqweg
                      nullable: true
              required:
                - name
                - email
                - password
                - role_id
  '/api/admin/users/{id}':
    get:
      summary: 'Retrieve a specific user.'
      operationId: retrieveASpecificUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users details retrieved.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Users details retrieved.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
    post:
      summary: 'Update an existing user.'
      operationId: updateAnExistingUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Users updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: e
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kassandra79@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'q{]=8vRn3VTqGLFB~WS.'
                  nullable: true
                role_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: null
                  nullable: false
                address:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    address_line1:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: cmx
                      nullable: false
                    city:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: hg
                      nullable: false
                    country:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: optufhuesywlnwnzry
                      nullable: false
                    postal_code:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: wpuucdobixtkzboan
                      nullable: false
                    address_line2:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: pfpfpgekaqtwlxra
                      nullable: true
                    state:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: zifo
                      nullable: true
    delete:
      summary: 'Permanently delete a user.'
      operationId: permanentlyDeleteAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Users deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/vendors:
    get:
      summary: 'Retrieve a paginated list of vendors.'
      operationId: retrieveAPaginatedListOfVendors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendors retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Vendors retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    post:
      summary: 'Create a new vendor.'
      operationId: createANewVendor
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendors created successfully!'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendors created successfully!'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: non
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pajklzuowyjfco
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Adipisci nobis autem enim maxime aut.'
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - user_id
                - name
                - description
  '/api/admin/vendors/{id}':
    get:
      summary: 'Retrieve a specific vendor.'
      operationId: retrieveASpecificVendor
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor details retrieved.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor details retrieved.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    post:
      summary: 'Update an existing vendor.'
      operationId: updateAnExistingVendor
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: urceogb
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Qui voluptatibus qui distinctio commodi in.'
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
    delete:
      summary: 'Permanently delete a vendor.'
      operationId: permanentlyDeleteAVendor
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Vendor deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vendor.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: 'Email Verification'
    description: ''
  -
    name: 'Password Reset'
    description: ''
  -
    name: 'Product Attributes'
    description: ''
  -
    name: 'Product Category'
    description: ''
  -
    name: 'Product Statuses'
    description: ''
  -
    name: 'Product Tags'
    description: ''
  -
    name: Products
    description: ''
  -
    name: Users
    description: ''
  -
    name: Vendors
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by making sure **PASSPORT_PERSONAL_ACCESS_CLIENT_ID** and **PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET** are included and a personal token is issued to create user tokens. Most paths will only need **HMAC** verification, this ensures all paths are secure.'
security:
  -
    default: []
