openapi: 3.0.3
info:
  title: 'E-Commerce API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://marketplace.com'
paths:
  /api/register:
    post:
      summary: 'Register a new user and return their API token.'
      operationId: registerANewUserAndReturnTheirAPIToken
      description: "This endpoint is used to register a new user, including their name, email, password,\nand password confirmation."
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  message: 'User registered successfully'
                  status: 200
                properties:
                  data:
                    type: array
                    example: []
                  message:
                    type: string
                    example: 'User registered successfully'
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The user's full name."
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password. Must be at least 8 characters."
                  example: password123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must match the password field.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'Login a user.'
      operationId: loginAUser
      description: 'Authenticates a user with email and password. Returns an API token with expiry timer.'
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"data\": {\n      \"token_type\": \"Bearer,\n      \"token\": \"{YOUR_AUTH_KEY}\",\n      \"expires_in\": \"{YOUR_EXPIRY_TIMER}\"\n  },\n  \"message\": \"Authenticated\",\n  \"status\": 200\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid credentials'
                  status: 401
                properties:
                  message:
                    type: string
                    example: 'Invalid credentials'
                  status:
                    type: integer
                    example: 401
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: password123
                  nullable: false
                remember:
                  type: boolean
                  description: 'optional Whether to remember the user.'
                  example: true
                  nullable: true
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Logout a user.'
      operationId: logoutAUser
      description: 'Logs out the currently authenticated user by invalidating their API token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User logged out successfully'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'User logged out successfully'
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
  '/api/email/verify/{id}/{hash}':
    get:
      summary: "Verify a user's email address."
      operationId: verifyAUsersEmailAddress
      description: 'Once a user registers, a notification is sent out to their specified email address, which requires them to verify.'
      parameters:
        -
          in: query
          name: id
          description: "The user's id."
          example: '1'
          required: true
          schema:
            type: string
            description: "The user's id."
            example: '1'
            nullable: false
        -
          in: query
          name: hash
          description: 'The hash to verify the email.'
          example: '1234567890'
          required: true
          schema:
            type: string
            description: 'The hash to verify the email.'
            example: '1234567890'
            nullable: false
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'Redirected to specified URL'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid/Expired url provided.'
                  status: 401
                properties:
                  message:
                    type: string
                    example: 'Invalid/Expired url provided.'
                  status:
                    type: integer
                    example: 401
      tags:
        - 'Email Verification'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: harum
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: debitis
        required: true
        schema:
          type: string
  /api/email/resend:
    get:
      summary: 'Resend email to user.'
      operationId: resendEmailToUser
      description: 'Once a user registers, a notification is sent out to their specified email address, which requires them to verify. Incase they dont recieve one, they can request again.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email verification link sent on your email id.'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'Email verification link sent on your email id.'
                  status:
                    type: integer
                    example: 200
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email already verified.'
                  status: 400
                properties:
                  message:
                    type: string
                    example: 'Email already verified.'
                  status:
                    type: integer
                    example: 400
      tags:
        - 'Email Verification'
      security: []
  /api/admin/orders:
    get:
      summary: 'Retrieve paginated list of orders.'
      operationId: retrievePaginatedListOfOrders
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Orders retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Orders retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: true
                status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the order_statuses table.'
                  example: null
                  nullable: true
    post:
      summary: 'Create a new order.'
      operationId: createANewOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Order created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: dolores
                  nullable: false
                status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the order_statuses table.'
                  example: null
                  nullable: true
                order_items:
                  type: array
                  description: 'Must have at least 1 items.'
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the products table.'
                        example: assumenda
                        nullable: false
                      product_variant_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the product_variants table.'
                        example: null
                        nullable: true
                      quantity:
                        type: integer
                        description: 'Must be at least 1.'
                        example: 84
                        nullable: false
                      price:
                        type: number
                        description: 'Must be at least 0.'
                        example: 75
                        nullable: false
                    required:
                      - product_id
                      - quantity
                      - price
              required:
                - user_id
                - order_items
  '/api/admin/orders/{id}':
    get:
      summary: 'Retrieve a specific order.'
      operationId: retrieveASpecificOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Order retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
    post:
      summary: 'Update an existing order.'
      operationId: updateAnExistingOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Order updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: true
                status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the order_statuses table.'
                  example: null
                  nullable: true
                order_items:
                  type: array
                  description: 'Must have at least 1 items.'
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the products table.'
                        example: culpa
                        nullable: false
                      product_variant_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the product_variants table.'
                        example: null
                        nullable: true
                      quantity:
                        type: integer
                        description: 'Must be at least 1.'
                        example: 30
                        nullable: false
                      price:
                        type: number
                        description: 'Must be at least 0.'
                        example: 80
                        nullable: false
                    required:
                      - product_id
                      - quantity
                      - price
              required:
                - order_items
    delete:
      summary: 'Soft delete a order.'
      operationId: softDeleteAOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order deleted (soft).'
                properties:
                  message:
                    type: string
                    example: 'Order deleted (soft).'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/orders/{id}/force-delete':
    delete:
      summary: 'Permanently delete a order.'
      operationId: permanentlyDeleteAOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order permanently deleted.'
                properties:
                  message:
                    type: string
                    example: 'Order permanently deleted.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/orders/{id}/restore':
    patch:
      summary: 'Restore a soft deleted order.'
      operationId: restoreASoftDeletedOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order restored successfully.'
                properties:
                  message:
                    type: string
                    example: 'Order restored successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/orders/{id}':
    get:
      summary: 'Retrieve a specific order.'
      operationId: retrieveASpecificOrder
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Order retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Order retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Orders
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  /api/forgot-password:
    post:
      summary: 'Request a password reset link.'
      operationId: requestAPasswordResetLink
      description: 'Sends a password reset email to the specified email address.'
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset link sent.'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'Password reset link sent.'
                  status:
                    type: integer
                    example: 200
        400:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"message\": {ERROR_MESSAGE},\n  \"status\": 400\n}"
      tags:
        - 'Password Reset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
              required:
                - email
  /api/reset-password:
    post:
      summary: "Reset a user's password."
      operationId: resetAUsersPassword
      description: "Resets the user's password using the provided reset token."
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password has been reset.'
                  status: 200
                properties:
                  message:
                    type: string
                    example: 'Password has been reset.'
                  status:
                    type: integer
                    example: 200
        400:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"message\": {ERROR_MESSAGE},\n  \"status\": 400\n}"
      tags:
        - 'Password Reset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The password reset token.'
                  example: abc123
                  nullable: false
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The new password.'
                  example: newpassword123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must match the password.'
                  example: newpassword123
                  nullable: false
              required:
                - token
                - email
                - password
                - password_confirmation
  /api/admin/payment-methods:
    get:
      summary: 'Retrieve all payment methods.'
      operationId: retrieveAllPaymentMethods
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Payment Methods retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Payment Methods retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Payment Methods'
    post:
      summary: 'Create a new payment method.'
      operationId: createANewPaymentMethod
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Payment Method created successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Payment Method created successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Payment Methods'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the payment method.'
                  example: '"Google Pay"'
                  nullable: false
              required:
                - name
  '/api/admin/payment-methods/{paymentMethod_id}':
    post:
      summary: 'Update a payment method.'
      operationId: updateAPaymentMethod
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Payment Method updated successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Payment Method updated successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Payment Methods'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the payment method.'
                  example: '"Google Pay"'
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a permission.'
      operationId: deleteAPermission
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Payment Method deleted successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Payment Method deleted successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Payment Methods'
    parameters:
      -
        in: path
        name: paymentMethod_id
        description: 'The ID of the paymentMethod.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/payments/{gateway}/create':
    post:
      summary: 'Initiate Payment'
      operationId: initiatePayment
      description: "Creates or retrieves a Stripe PaymentIntent for a given order. If a payment already exists,\nit will return the existing client secret to avoid duplicate charges."
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: true
                      message: 'PaymentIntent created successfully.'
                      data:
                        client_secret: pi_1Hxxxxxxxxxxxx_secret_xxxxxxxxx
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: 'PaymentIntent created successfully.'
                      data:
                        type: object
                        properties:
                          client_secret:
                            type: string
                            example: pi_1Hxxxxxxxxxxxx_secret_xxxxxxxxx
                  -
                    description: 'Already Paid'
                    type: object
                    example:
                      status: true
                      message: 'Payment has already been processed for this order.'
                      data: null
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: 'Payment has already been processed for this order.'
                      data:
                        type: string
                        example: null
        400:
          description: 'Unsupported Gateway'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: 'Unsupported payment gateway'
                  data: null
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Unsupported payment gateway'
                  data:
                    type: string
                    example: null
        404:
          description: 'Order Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: 'No query results for model [App\Models\Order] 999'
                  data: null
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Order] 999'
                  data:
                    type: string
                    example: null
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  description: 'The ID of the order being paid for.'
                  example: 123
                  nullable: false
              required:
                - order_id
      security: []
    parameters:
      -
        in: path
        name: gateway
        description: 'The payment gateway to use. Currently supported: `stripe`.'
        example: stripe
        required: true
        schema:
          type: string
  /api/payments/stripe/webhook:
    post:
      summary: 'Stripe Webhook Listener'
      operationId: stripeWebhookListener
      description: "This endpoint is triggered by Stripe when a payment event occurs (e.g., payment succeeded, failed).\nIt verifies the webhook signature and processes the payment status accordingly."
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Webhook update.'
                  data: null
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook update.'
                  data:
                    type: string
                    example: null
        400:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Invalid Signature or Payload'
                    type: object
                    example:
                      status: false
                      message: 'Invalid Stripe signature'
                      data: null
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Invalid Stripe signature'
                      data:
                        type: string
                        example: null
                  -
                    description: 'Invalid Payload Format'
                    type: object
                    example:
                      status: false
                      message: 'Invalid payload'
                      data: null
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Invalid payload'
                      data:
                        type: string
                        example: null
      tags:
        - Payments
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: $event
                  description: 'Stripe webhook payload. The full JSON payload sent by Stripe will be validated internally.'
                  example: rem
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: none
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: dolor
  /api/admin/permissions:
    get:
      summary: 'Retrieve all permissions.'
      operationId: retrieveAllPermissions
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permissions retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Permissions retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Permissions
    post:
      summary: 'Create a new permission.'
      operationId: createANewPermission
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permission created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Permission created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the permission.'
                  example: '"create-vendor"'
                  nullable: false
              required:
                - name
  '/api/admin/permissions/{id}':
    post:
      summary: 'Update a permission.'
      operationId: updateAPermission
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permission updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Permission updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the permission.'
                  example: '"create-vendor"'
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a permission.'
      operationId: deleteAPermission
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permission deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Permission deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Permissions
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the permission.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-attributes:
    get:
      summary: 'Retrieve all product attributes.'
      operationId: retrieveAllProductAttributes
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attributes retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Attributes retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
    post:
      summary: 'Create a new product attribute.'
      operationId: createANewProductAttribute
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product attribute created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product attribute created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the product attribute.'
                  example: '"Color"'
                  nullable: false
              required:
                - name
  '/api/admin/product-attributes/{productAttribute_id}':
    get:
      summary: 'Retrieve a specific product attribute.'
      operationId: retrieveASpecificProductAttribute
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attribute retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Attribute retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
    post:
      summary: 'Update a product attribute.'
      operationId: updateAProductAttribute
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product attribute updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product attribute updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the product attribute.'
                  example: '"Size"'
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a product attribute.'
      operationId: deleteAProductAttribute
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product attribute deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product attribute deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Attributes'
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-categories:
    get:
      summary: 'Get all product categories'
      operationId: getAllProductCategories
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Categories retrieved successfully.'
                  data:
                    -
                      id: 1
                      name: Electronics
                      children: []
                properties:
                  message:
                    type: string
                    example: 'Categories retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Electronics
                        children: []
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Electronics
                        children:
                          type: array
                          example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
    post:
      summary: 'Store a new product category'
      operationId: storeANewProductCategory
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category created successfully.'
                  data:
                    id: 2
                    name: Laptops
                    parent_id: 1
                properties:
                  message:
                    type: string
                    example: 'Category created successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: Laptops
                      parent_id:
                        type: integer
                        example: 1
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: expedita
                  nullable: false
                parent_id:
                  type: integer
                  description: 'optional The ID of the parent category.'
                  example: 13
                  nullable: true
              required:
                - name
  '/api/admin/product-categories/{productCategory_id}':
    get:
      summary: 'Get a specific product category'
      operationId: getASpecificProductCategory
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category retrieved successfully.'
                  data:
                    id: 1
                    name: Electronics
                    children: []
                properties:
                  message:
                    type: string
                    example: 'Category retrieved successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Electronics
                      children:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
    post:
      summary: 'Update a product category'
      operationId: updateAProductCategory
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category updated successfully.'
                  data:
                    id: 1
                    name: 'Updated Category Name'
                    parent_id: null
                properties:
                  message:
                    type: string
                    example: 'Category updated successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Updated Category Name'
                      parent_id:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: natus
                  nullable: false
                parent_id:
                  type: integer
                  description: 'optional The ID of the parent category.'
                  example: 19
                  nullable: true
              required:
                - name
    delete:
      summary: 'Delete a product category'
      operationId: deleteAProductCategory
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Category deleted successfully'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot delete a category with subcategories'
                properties:
                  message:
                    type: string
                    example: 'Cannot delete a category with subcategories'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Category'
    parameters:
      -
        in: path
        name: productCategory_id
        description: 'The ID of the productCategory.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-tags:
    get:
      summary: 'Retrieve all product tags.'
      operationId: retrieveAllProductTags
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tags retrieved successfully.'
                  data:
                    -
                      id: 1
                      name: Electronics
                    -
                      id: 2
                      name: Fashion
                properties:
                  message:
                    type: string
                    example: 'Tags retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Electronics
                      -
                        id: 2
                        name: Fashion
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Electronics
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
    post:
      summary: 'Create a new product tag.'
      operationId: createANewProductTag
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag created successfully.'
                  data:
                    id: 3
                    name: 'Home Appliances'
                properties:
                  message:
                    type: string
                    example: 'Tag created successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Home Appliances'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the product tag.'
                  example: enim
                  nullable: false
              required:
                - name
  '/api/admin/product-tags/{productTag_id}':
    get:
      summary: 'Retrieve a specific product tag.'
      operationId: retrieveASpecificProductTag
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag retrieved successfully.'
                  data:
                    id: 1
                    name: Electronics
                properties:
                  message:
                    type: string
                    example: 'Tag retrieved successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Electronics
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
    post:
      summary: 'Update an existing product tag.'
      operationId: updateAnExistingProductTag
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag updated successfully.'
                  data:
                    id: 1
                    name: Gadgets
                properties:
                  message:
                    type: string
                    example: 'Tag updated successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Gadgets
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the product tag.'
                  example: velit
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a product tag.'
      operationId: deleteAProductTag
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Tag deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Product Tags'
    parameters:
      -
        in: path
        name: productTag_id
        description: 'The ID of the productTag.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/products:
    get:
      summary: 'Retrieve a paginated list of products.'
      operationId: retrieveAPaginatedListOfProducts
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Products retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Products retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: r
                      nullable: false
                    price:
                      type: string
                      description: 'Must match the regex /^\d+(\.\d{1,2})?(,\d+(\.\d{1,2})?)*$/.'
                      example: 2.4)))))
                      nullable: false
                    category:
                      type: string
                      description: 'Must match the regex /^(\d,?)+$/.'
                      example: '9,5,3,47,4,7'
                      nullable: false
                    quantity:
                      type: integer
                      description: 'Must be at least 0.'
                      example: 1
                      nullable: false
                    created_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '1052-47-52,9150-54-74'
                      nullable: false
                    updated_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '4846-11-33'
                      nullable: false
                    search:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: gvddynuamlamw
                      nullable: false
                    include:
                      type: string
                      description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
                      example: ''
                      nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 9
                  nullable: false
                sort:
                  type: string
                  description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
                  example: '-XEgHzij,-8S,st'
                  nullable: false
    post:
      summary: 'Create a new product.'
      operationId: createANewProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jmgrjkjlvhrsmjqm
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'At sapiente distinctio quia occaecati in.'
                  nullable: true
                price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 42
                  nullable: false
                product_category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_categories table.'
                  example: et
                  nullable: false
                product_status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_statuses table.'
                  example: dolor
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 54
                  nullable: false
                product_tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the product_tags table.'
                  example: null
                  items:
                    type: string
                product_variants:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      product_attribute_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the product_attributes table.'
                        example: consequuntur
                        nullable: false
                      value:
                        type: string
                        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
                        example: bbebgirgjhqlxslcn
                        nullable: false
                      additional_price:
                        type: number
                        description: 'Must be at least 0.'
                        example: 74
                        nullable: true
                      quantity:
                        type: integer
                        description: 'Must be at least 0.'
                        example: 49
                        nullable: false
                    required:
                      - product_attribute_id
                      - quantity
                media:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    featured_image:
                      type: string
                      format: binary
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      nullable: false
                    gallery:
                      type: array
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      items:
                        type: string
                        format: binary
              required:
                - name
                - price
                - product_category_id
                - product_status_id
                - quantity
  '/api/admin/products/{id}':
    get:
      summary: 'Retrieve a specific product.'
      operationId: retrieveASpecificProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    post:
      summary: 'Update an existing product.'
      operationId: updateAnExistingProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cywvrsgjddxngqwwoyipvlrku
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Impedit tempore nam ut incidunt qui aut.'
                  nullable: true
                price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 82
                  nullable: false
                product_category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_categories table.'
                  example: fugit
                  nullable: false
                product_status_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the product_statuses table.'
                  example: eos
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 62
                  nullable: false
                product_tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the product_tags table.'
                  example: null
                  items:
                    type: string
                product_variants:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      product_attribute_id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the product_attributes table.'
                        example: blanditiis
                        nullable: false
                      value:
                        type: string
                        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
                        example: chksyh
                        nullable: false
                      additional_price:
                        type: number
                        description: 'Must be at least 0.'
                        example: 21
                        nullable: true
                      quantity:
                        type: integer
                        description: 'Must be at least 0.'
                        example: 76
                        nullable: false
                    required:
                      - product_attribute_id
                      - quantity
                media:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    featured_image:
                      type: string
                      format: binary
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      nullable: true
                    gallery:
                      type: array
                      description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
                      items:
                        type: string
                        format: binary
              required:
                - name
                - price
                - product_category_id
                - product_status_id
                - quantity
    delete:
      summary: 'Permanently delete a product.'
      operationId: permanentlyDeleteAProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/products/soft-destroy/{product_id}':
    delete:
      summary: 'Soft delete a product.'
      operationId: softDeleteAProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/products/{id}/restore':
    patch:
      summary: 'Restore a soft deleted product.'
      operationId: restoreASoftDeletedProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product restored successfully.'
                properties:
                  message:
                    type: string
                    example: 'Product restored successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/products:
    get:
      summary: 'Retrieve a paginated list of products.'
      operationId: retrieveAPaginatedListOfProducts
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Products retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Products retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: cniajuqmbhoclpfqhnzcjdcz
                      nullable: false
                    price:
                      type: string
                      description: 'Must match the regex /^\d+(\.\d{1,2})?(,\d+(\.\d{1,2})?)*$/.'
                      example: 57)))
                      nullable: false
                    category:
                      type: string
                      description: 'Must match the regex /^(\d,?)+$/.'
                      example: '7,42'
                      nullable: false
                    quantity:
                      type: integer
                      description: 'Must be at least 0.'
                      example: 60
                      nullable: false
                    created_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '7531-71-53,2431-66-77'
                      nullable: false
                    updated_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '4574-39-02'
                      nullable: false
                    search:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: xscrvfsiasbcmnac
                      nullable: false
                    include:
                      type: string
                      description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
                      example: 'u,kxid'
                      nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 15
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 18
                  nullable: false
                sort:
                  type: string
                  description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
                  example: '-H'
                  nullable: false
      security: []
  '/api/products/{id}':
    get:
      summary: 'Retrieve a specific product.'
      operationId: retrieveASpecificProduct
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Product retrieved successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Product retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Products
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/roles/{role_id}/permissions':
    get:
      summary: 'Retrieve all permissions for a role.'
      operationId: retrieveAllPermissionsForARole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permissions retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Permissions retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Role Permissions'
    post:
      summary: 'Assign specific permissions to a role.'
      operationId: assignSpecificPermissionsToARole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permissions assigned successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Permissions assigned successfully.'
                  data:
                    type: object
                    properties: {  }
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    permissions:
                      - 'The permissions field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      permissions:
                        type: array
                        example:
                          - 'The permissions field is required.'
                        items:
                          type: string
      tags:
        - 'Role Permissions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: array
                  description: 'List of permission names to assign.'
                  example:
                    - create_users
                    - edit_users
                  items:
                    type: string
              required:
                - permissions
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: role
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/roles/{role_id}/permissions/assign-all':
    post:
      summary: 'Assign all available permissions to a role.'
      operationId: assignAllAvailablePermissionsToARole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'All permissions assigned successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'All permissions assigned successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Role Permissions'
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: role
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/roles/{role_id}/permissions/{permission_id}':
    delete:
      summary: 'Revoke a specific permission from a role.'
      operationId: revokeASpecificPermissionFromARole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Permission revoked successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Permission revoked successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - 'Role Permissions'
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: permission_id
        description: 'The ID of the permission.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: role
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: permission
        description: 'The ID of the permission to revoke.'
        example: 5
        required: true
        schema:
          type: integer
  /api/admin/roles:
    get:
      summary: 'Retrieve all roles.'
      operationId: retrieveAllRoles
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Roles retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Roles retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Roles
    post:
      summary: 'Create a new role.'
      operationId: createANewRole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Role created successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Role created successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role.'
                  example: '"admin"'
                  nullable: false
              required:
                - name
  '/api/admin/roles/{id}':
    post:
      summary: 'Update a role.'
      operationId: updateARole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Role updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Role updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the role.'
                  example: '"admin"'
                  nullable: false
              required:
                - name
    delete:
      summary: 'Delete a role.'
      operationId: deleteARole
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Role deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Role deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Roles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/users:
    get:
      summary: 'Retrieve a paginated list of users.'
      operationId: retrieveAPaginatedListOfUsers
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Users retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties:
                    name:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: ubpatqyozvl
                      nullable: false
                    email:
                      type: string
                      description: 'Must be a valid email address. Must not be greater than 255 characters.'
                      example: ehuels@example.net
                      nullable: false
                    role:
                      type: string
                      description: 'Must match the regex /^(\d,?)+$/.'
                      example: '8,2,6,'
                      nullable: false
                    created_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '0423-75-49'
                      nullable: false
                    updated_at:
                      type: string
                      description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
                      example: '5336-59-59,2330-04-82'
                      nullable: false
                    search:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: cxlboklup
                      nullable: false
                    include:
                      type: string
                      description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
                      example: )
                      nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 38
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 12
                  nullable: false
                sort:
                  type: string
                  description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
                  example: '-Wciopgyte'
                  nullable: false
    post:
      summary: 'Create a new user.'
      operationId: createANewUser
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User created successfully!'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'User created successfully!'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zxd
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: baumbach.kianna@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: yPCluei
                  nullable: false
                role_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: totam
                  nullable: false
                address:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    address_line1:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: qlaq
                      nullable: false
                    city:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: xrecapdsstwikjbqwlwbcel
                      nullable: false
                    country:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: iyasoyherpcfmah
                      nullable: false
                    postal_code:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: ldgfhdkitjluq
                      nullable: false
                    address_line2:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: loqc
                      nullable: true
                    state:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: eengtujmoxmdfjm
                      nullable: true
              required:
                - name
                - email
                - password
                - role_id
  '/api/admin/users/{id}':
    get:
      summary: 'Retrieve a specific user.'
      operationId: retrieveASpecificUser
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User details retrieved.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'User details retrieved.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
    post:
      summary: 'Update an existing user.'
      operationId: updateAnExistingUser
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'User updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xibuiuzzzdnbxrhe
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: hjohnson@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'yq<u(ca"+2cK[w}e_'
                  nullable: true
                role_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: null
                  nullable: false
                address:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    address_line1:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: ifsxkeofyygbzagp
                      nullable: false
                    city:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: vhuobqbegkbbrehsewu
                      nullable: false
                    country:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: jicemprfhhpl
                      nullable: false
                    postal_code:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: eb
                      nullable: false
                    address_line2:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: smqmzy
                      nullable: true
                    state:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: trrzapgjcsynatpoehc
                      nullable: true
    delete:
      summary: 'Permanently delete a user.'
      operationId: permanentlyDeleteAUser
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'User deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/{id}':
    get:
      summary: 'Retrieve a specific user.'
      operationId: retrieveASpecificUser
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User details retrieved.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'User details retrieved.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
    post:
      summary: 'Update an existing user.'
      operationId: updateAnExistingUser
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'User updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hlqtxgpekjpndxc
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: vallie07@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: lm/4PJAE6\8Z
                  nullable: true
                role_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: null
                  nullable: false
                address:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    address_line1:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: gadjbyuzx
                      nullable: false
                    city:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: bmor
                      nullable: false
                    country:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: hks
                      nullable: false
                    postal_code:
                      type: string
                      description: 'Must not be greater than 20 characters.'
                      example: fcxltfihy
                      nullable: false
                    address_line2:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: hodszjctnlaxrn
                      nullable: true
                    state:
                      type: string
                      description: 'Must not be greater than 255 characters.'
                      example: jgkqzsujxvkasakbmak
                      nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/vendors:
    get:
      summary: 'Retrieve a paginated list of vendors.'
      operationId: retrieveAPaginatedListOfVendors
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendors retrieved successfully.'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Vendors retrieved successfully.'
                  data:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    post:
      summary: 'Create a new vendor.'
      operationId: createANewVendor
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor created successfully!'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor created successfully!'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: non
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aqpsozhujmlg
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Id est veritatis dolorum cupiditate iusto quia et.'
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - user_id
                - name
                - description
  '/api/admin/vendors/{id}':
    get:
      summary: 'Retrieve a specific vendor.'
      operationId: retrieveASpecificVendor
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor details retrieved.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor details retrieved.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    post:
      summary: 'Update an existing vendor.'
      operationId: updateAnExistingVendor
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: u
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Rerum maxime qui ipsam aut fugit.'
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
    delete:
      summary: 'Permanently delete a vendor.'
      operationId: permanentlyDeleteAVendor
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Vendor deleted successfully.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vendor.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/vendors/{id}':
    get:
      summary: 'Retrieve a specific vendor.'
      operationId: retrieveASpecificVendor
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor details retrieved.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor details retrieved.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
    post:
      summary: 'Update an existing vendor.'
      operationId: updateAnExistingVendor
      description: ''
      parameters:
        -
          in: header
          name: X-Hmac
          description: ''
          example: 'HMAC signature of the request payload done via sha256.'
          schema:
            type: string
        -
          in: header
          name: X-Timestamp
          description: ''
          example: 'Timestamp + Request body.'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor updated successfully.'
                  data: {  }
                properties:
                  message:
                    type: string
                    example: 'Vendor updated successfully.'
                  data:
                    type: object
                    properties: {  }
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You do not have the required permissions.'
                properties:
                  message:
                    type: string
                    example: 'You do not have the required permissions.'
      tags:
        - Vendors
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nsdodkekl
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'Architecto esse beatae reprehenderit similique magni vero tenetur.'
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vendor.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: 'Email Verification'
    description: ''
  -
    name: Orders
    description: ''
  -
    name: 'Password Reset'
    description: ''
  -
    name: 'Payment Methods'
    description: ''
  -
    name: Payments
    description: ''
  -
    name: Permissions
    description: ''
  -
    name: 'Product Attributes'
    description: ''
  -
    name: 'Product Category'
    description: ''
  -
    name: 'Product Tags'
    description: ''
  -
    name: Products
    description: ''
  -
    name: 'Role Permissions'
    description: ''
  -
    name: Roles
    description: ''
  -
    name: Users
    description: ''
  -
    name: Vendors
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by making sure **PASSPORT_PERSONAL_ACCESS_CLIENT_ID** and **PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET** are included and a personal token is issued to create user tokens. Most paths will only need **HMAC** verification, this ensures all paths are secure.'
security:
  -
    default: []
