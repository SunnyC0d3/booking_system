name: Orders
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve paginated list of orders.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status_id:
        name: status_id
        description: 'The <code>id</code> of an existing record in the order_statuses table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Orders retrieved successfully.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status_id:
        name: status_id
        description: 'The <code>id</code> of an existing record in the order_statuses table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      order_items:
        name: order_items
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'order_items[].product_id':
        name: 'order_items[].product_id'
        description: 'The <code>id</code> of an existing record in the products table.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'order_items[].product_variant_id':
        name: 'order_items[].product_variant_id'
        description: 'The <code>id</code> of an existing record in the product_variants table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'order_items[].quantity':
        name: 'order_items[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 41
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'order_items[].price':
        name: 'order_items[].price'
        description: 'Must be at least 0.'
        required: true
        example: 41
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: blanditiis
      order_items:
        -
          product_id: quaerat
          quantity: 41
          price: 41
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order created successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order retrieved successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status_id:
        name: status_id
        description: 'The <code>id</code> of an existing record in the order_statuses table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      order_items:
        name: order_items
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'order_items[].product_id':
        name: 'order_items[].product_id'
        description: 'The <code>id</code> of an existing record in the products table.'
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'order_items[].product_variant_id':
        name: 'order_items[].product_variant_id'
        description: 'The <code>id</code> of an existing record in the product_variants table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'order_items[].quantity':
        name: 'order_items[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'order_items[].price':
        name: 'order_items[].price'
        description: 'Must be at least 0.'
        required: true
        example: 48
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order_items:
        -
          product_id: ullam
          quantity: 9
          price: 48
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order updated successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete a order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order deleted (soft)."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/orders/{id}/force-delete'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order permanently deleted."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/orders/{id}/restore'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft deleted order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Order restored successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
