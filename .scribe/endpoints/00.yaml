name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user and return their API token.'
      description: |-
        This endpoint is used to register a new user, including their name, email, password,
        and password confirmation.
      authenticated: false
      custom: []
    headers:
      X-Hmac: 'HMAC signature of the request payload done via sha256.'
      X-Timestamp: 'Timestamp + request body.'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password. Must be at least 8 characters."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must match the password field.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: password123
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [],
            "message": "User registered successfully",
            "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a user.'
      description: 'Authenticates a user with email and password. Returns an API token with expiry timer.'
      authenticated: false
      custom: []
    headers:
      X-Hmac: 'HMAC signature of the request payload done via sha256.'
      X-Timestamp: 'Timestamp + request body.'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      remember:
        name: remember
        description: 'optional Whether to remember the user.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      password: password123
      remember: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
                "token_type": "Bearer,
                "token": "{YOUR_AUTH_KEY}",
                "expires_in": "{YOUR_EXPIRY_TIMER}"
            },
            "message": "Authenticated",
            "status": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid credentials",
            "status": 401
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout a user.'
      description: 'Logs out the currently authenticated user by invalidating their API token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Token required.'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User logged out successfully",
            "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
