name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      filter:
        name: filter
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.name:
        name: filter.name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ebu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.email:
        name: filter.email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: mpfannerstill@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.role:
        name: filter.role
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '9,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.created_at:
        name: filter.created_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '8265-86-13'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.updated_at:
        name: filter.updated_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '3946-22-98,9927-01-91'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.search:
        name: filter.search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: shsxcykvtjdldqpvcfxqzyi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.include:
        name: filter.include
        description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 75
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
        required: false
        example: 'NDw3,R1zCc,-iRFN2,-G_eaL,fZwAt,lr6rg,-kL5In,Uxrfy'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      filter:
        name: ebu
        email: mpfannerstill@example.com
        role: '9,'
        created_at: '8265-86-13'
        updated_at: '3946-22-98,9927-01-91'
        search: shsxcykvtjdldqpvcfxqzyi
        include: ''
      page: 75
      per_page: 13
      sort: 'NDw3,R1zCc,-iRFN2,-G_eaL,fZwAt,lr6rg,-kL5In,Uxrfy'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users retrieved successfully.",
              "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User details retrieved.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jebvqrfmdxjcdzmo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: charley05@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '#,|yV('
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role_id:
        name: role_id
        description: 'The <code>id</code> of an existing record in the roles table.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line1:
        name: address.address_line1
        description: 'Must not be greater than 255 characters.'
        required: true
        example: wu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.city:
        name: address.city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hsygwhgubrtbdnfgnpzj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.country:
        name: address.country
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jhtqccyrbffgonholga
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.postal_code:
        name: address.postal_code
        description: 'Must not be greater than 20 characters.'
        required: true
        example: hnbjjz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line2:
        name: address.address_line2
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mxfqyszbau
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address.state:
        name: address.state
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yiwlgmupvpjaxpyxerdz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: jebvqrfmdxjcdzmo
      email: charley05@example.org
      password: '#,|yV('
      role_id: ut
      address:
        address_line1: wu
        city: hsygwhgubrtbdnfgnpzj
        country: jhtqccyrbffgonholga
        postal_code: hnbjjz
        address_line2: mxfqyszbau
        state: yiwlgmupvpjaxpyxerdz
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User created successfully!",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: lbodymawjrlippfzw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: ylehner@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: 1@DwvwTpG
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role_id:
        name: role_id
        description: 'The <code>id</code> of an existing record in the roles table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line1:
        name: address.address_line1
        description: 'Must not be greater than 255 characters.'
        required: true
        example: garhmkbqznxtv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.city:
        name: address.city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: klno
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.country:
        name: address.country
        description: 'Must not be greater than 255 characters.'
        required: true
        example: qmmhseswsdvzm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.postal_code:
        name: address.postal_code
        description: 'Must not be greater than 20 characters.'
        required: true
        example: ppct
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line2:
        name: address.address_line2
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address.state:
        name: address.state
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hdtuihbogcpe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: lbodymawjrlippfzw
      email: ylehner@example.org
      password: 1@DwvwTpG
      address:
        address_line1: garhmkbqznxtv
        city: klno
        country: qmmhseswsdvzm
        postal_code: ppct
        address_line2: mo
        state: hdtuihbogcpe
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User updated successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
