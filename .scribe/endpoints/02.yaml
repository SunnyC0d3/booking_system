name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of products.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      filter:
        name: filter
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.name:
        name: filter.name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: lgllnvqgjmmgupaqrqvzlmfy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.price:
        name: filter.price
        description: 'Must match the regex /^\d+(\.\d{1,2})?(,\d+(\.\d{1,2})?)*$/.'
        required: false
        example: 562152.89)))))))
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.category:
        name: filter.category
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '8'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.quantity:
        name: filter.quantity
        description: 'Must be at least 0.'
        required: false
        example: 66
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.created_at:
        name: filter.created_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '8109-15-20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.updated_at:
        name: filter.updated_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '1721-78-93'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.search:
        name: filter.search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rtlo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.include:
        name: filter.include
        description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
        required: false
        example: 'cp,ubbatrd,g)'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 43
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
        required: false
        example: '-_,-I,-x,-j'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      filter:
        name: lgllnvqgjmmgupaqrqvzlmfy
        price: 562152.89)))))))
        category: '8'
        quantity: 66
        created_at: '8109-15-20'
        updated_at: '1721-78-93'
        search: rtlo
        include: 'cp,ubbatrd,g)'
      page: 43
      per_page: 6
      sort: '-_,-I,-x,-j'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Products retrieved successfully.",
              "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific product.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Product retrieved successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hfgurtpjoepssqizxbl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Velit alias quaerat est soluta.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      price:
        name: price
        description: 'Must be at least 0.'
        required: true
        example: 47
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_category_id:
        name: product_category_id
        description: 'The <code>id</code> of an existing record in the product_categories table.'
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_status_id:
        name: product_status_id
        description: 'The <code>id</code> of an existing record in the product_statuses table.'
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.'
        required: true
        example: 52
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_tags:
        name: product_tags
        description: 'The <code>id</code> of an existing record in the product_tags table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_variants:
        name: product_variants
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media:
        name: media
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.featured_image:
        name: media.featured_image
        description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].product_attribute_id':
        name: 'product_variants[].product_attribute_id'
        description: 'The <code>id</code> of an existing record in the product_attributes table.'
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].value':
        name: 'product_variants[].value'
        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
        required: false
        example: ld
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].additional_price':
        name: 'product_variants[].additional_price'
        description: 'Must be at least 0.'
        required: false
        example: 85
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].quantity':
        name: 'product_variants[].quantity'
        description: 'Must be at least 0.'
        required: true
        example: 58
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.gallery:
        name: media.gallery
        description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: hfgurtpjoepssqizxbl
      description: 'Velit alias quaerat est soluta.'
      price: 47
      product_category_id: assumenda
      product_status_id: consectetur
      quantity: 52
      product_variants:
        -
          product_attribute_id: earum
          value: ld
          additional_price: 85
          quantity: 58
    fileParameters:
      media:
        featured_image: null
        gallery:
          - null
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Product created successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing product.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ogjsupfvkfqcrhtnmx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Autem esse eum dolor et eum odio.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      price:
        name: price
        description: 'Must be at least 0.'
        required: true
        example: 20
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_category_id:
        name: product_category_id
        description: 'The <code>id</code> of an existing record in the product_categories table.'
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_status_id:
        name: product_status_id
        description: 'The <code>id</code> of an existing record in the product_statuses table.'
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_tags:
        name: product_tags
        description: 'The <code>id</code> of an existing record in the product_tags table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_variants:
        name: product_variants
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media:
        name: media
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.featured_image:
        name: media.featured_image
        description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].product_attribute_id':
        name: 'product_variants[].product_attribute_id'
        description: 'The <code>id</code> of an existing record in the product_attributes table.'
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].value':
        name: 'product_variants[].value'
        description: 'This field is required when <code>product_variants</code> is present. Must not be greater than 255 characters.'
        required: false
        example: fpw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'product_variants[].additional_price':
        name: 'product_variants[].additional_price'
        description: 'Must be at least 0.'
        required: false
        example: 10
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'product_variants[].quantity':
        name: 'product_variants[].quantity'
        description: 'Must be at least 0.'
        required: true
        example: 34
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      media.gallery:
        name: media.gallery
        description: 'Must be a file. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: ogjsupfvkfqcrhtnmx
      description: 'Autem esse eum dolor et eum odio.'
      price: 20
      product_category_id: incidunt
      product_status_id: nihil
      quantity: 2
      product_variants:
        -
          product_attribute_id: modi
          value: fpw
          additional_price: 10
          quantity: 34
    fileParameters:
      media:
        featured_image: null
        gallery:
          - null
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Product updated successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/products/soft-destroy/{product_id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete a product.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Product deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a product.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Product deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
