## Autogenerated by Scribe. DO NOT MODIFY.

name: Roles
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/roles
    metadata:
      groupName: Roles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all roles.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      X-Hmac: 'HMAC signature of the request payload done via sha256.'
      X-Timestamp: 'Timestamp + Request body.'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Roles retrieved successfully.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/roles
    metadata:
      groupName: Roles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      X-Hmac: 'HMAC signature of the request payload done via sha256.'
      X-Timestamp: 'Timestamp + Request body.'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the role.'
        required: true
        example: '"admin"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"admin"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role created successfully.",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: Roles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      X-Hmac: 'HMAC signature of the request payload done via sha256.'
      X-Timestamp: 'Timestamp + Request body.'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name of the role.'
        required: true
        example: '"admin"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"admin"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role updated successfully.",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: Roles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      X-Hmac: 'HMAC signature of the request payload done via sha256.'
      X-Timestamp: 'Timestamp + Request body.'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
