## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Authentication
      subgroupDescription: ''
      title: 'Authenticate the user and return their API token.'
      description: |-
        This endpoint is used to authenticate a user with their email and password. If the
        credentials are valid, an API token and refresh token will be issued.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: tankunding@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: "dPJUAO<{jO'Lpfqk<_"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: tankunding@example.net
      password: "dPJUAO<{jO'Lpfqk<_"
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
                "token": "{YOUR_AUTH_KEY}",
                "refresh_token": "{YOUR_REFRESH_KEY}"
          },
               "message": "Authenticated",
               "status": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
               "message": "Invalid credentials",
               "status": 401
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Authentication
      subgroupDescription: ''
      title: 'Register a new user and return their API token.'
      description: |-
        This endpoint is used to register a new user, including their name, email, password,
        and password confirmation. A new API token and refresh token will be issued.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password. Must be at least 8 characters."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must match the password field.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: password123
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
                "token": "{YOUR_AUTH_KEY}",
                "refresh_token": "{YOUR_REFRESH_KEY}"
            },
            "message": "User registered successfully",
            "status": 201
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Authentication
      subgroupDescription: ''
      title: 'Logout the user and destroy their API token.'
      description: |-
        This endpoint allows the user to log out by deleting their current access token
        and refresh token from the database.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      refresh_token:
        name: refresh_token
        description: 'Must not be greater than 60 characters.'
        required: true
        example: eljnfguppzikqszhrwqimytb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      refresh_token: eljnfguppzikqszhrwqimytb
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
               "message": "No token exists.",
               "status": 400
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/token/refresh
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Authentication
      subgroupDescription: ''
      title: "Refresh the user's API token and generate a new refresh token."
      description: |-
        This endpoint is used to refresh the user's API access token by validating their
        refresh token and issuing new tokens if valid.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      refresh_token:
        name: refresh_token
        description: 'Must not be greater than 60 characters.'
        required: true
        example: giapvc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      refresh_token: giapvc
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
                "token": "{YOUR_NEW_AUTH_KEY}",
                "refresh_token": "{YOUR_NEW_REFRESH_KEY}"
          },
               "message": "New tokens have been generated.",
               "status": 201
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
               "message": "Refresh token expired",
               "status": 400
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
               "message": "Invalid refresh token",
               "status": 400
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
