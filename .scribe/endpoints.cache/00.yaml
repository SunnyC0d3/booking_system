## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      filter:
        name: filter
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.name:
        name: filter.name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: lzzib
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.email:
        name: filter.email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: cristobal.marquardt@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.role:
        name: filter.role
        description: 'Must match the regex /^(\d,?)+$/.'
        required: false
        example: '24,41,14,52,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.created_at:
        name: filter.created_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '9876-75-19,4295-91-93'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.updated_at:
        name: filter.updated_at
        description: 'Must match the regex /^\d{4}-\d{2}-\d{2}(,\d{4}-\d{2}-\d{2})?$/.'
        required: false
        example: '5413-16-98,5731-52-38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.search:
        name: filter.search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ohoqnjzgozaedvnnkdc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      filter.include:
        name: filter.include
        description: 'Must match the regex /^(\w+(,\w+)*)?$/.'
        required: false
        example: 'j,tjr,zk'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must match the regex /^(-?[a-zA-Z0-9_]+)(,-?[a-zA-Z0-9_]+)*$/.'
        required: false
        example: '-Nhy,-Er,-KP,-WU,QV,-C5,W4'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      filter:
        name: lzzib
        email: cristobal.marquardt@example.net
        role: '24,41,14,52,'
        created_at: '9876-75-19,4295-91-93'
        updated_at: '5413-16-98,5731-52-38'
        search: ohoqnjzgozaedvnnkdc
        include: 'j,tjr,zk'
      page: 14
      per_page: 6
      sort: '-Nhy,-Er,-KP,-WU,QV,-C5,W4'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users retrieved successfully.",
              "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users details retrieved.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: yi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: yhintz@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '&bXNASu'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role_id:
        name: role_id
        description: 'The <code>id</code> of an existing record in the roles table.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line1:
        name: address.address_line1
        description: 'Must not be greater than 255 characters.'
        required: true
        example: adby
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.city:
        name: address.city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ycm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.country:
        name: address.country
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mkewyndvbnltpbezjxreq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.postal_code:
        name: address.postal_code
        description: 'Must not be greater than 20 characters.'
        required: true
        example: tcnubtcwzrazveoig
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line2:
        name: address.address_line2
        description: 'Must not be greater than 255 characters.'
        required: false
        example: up
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address.state:
        name: address.state
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeisadrcpubihnmvjzvfme
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: yi
      email: yhintz@example.com
      password: '&bXNASu'
      role_id: est
      address:
        address_line1: adby
        city: ycm
        country: mkewyndvbnltpbezjxreq
        postal_code: tcnubtcwzrazveoig
        address_line2: up
        state: mqeisadrcpubihnmvjzvfme
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users created successfully!",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hregkjiwnbvhsyy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: jpfannerstill@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: 'p4F:N%='
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role_id:
        name: role_id
        description: 'The <code>id</code> of an existing record in the roles table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line1:
        name: address.address_line1
        description: 'Must not be greater than 255 characters.'
        required: true
        example: fkzbt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.city:
        name: address.city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zoqinhl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.country:
        name: address.country
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ewwqacethmolrruwmfdmbfal
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.postal_code:
        name: address.postal_code
        description: 'Must not be greater than 20 characters.'
        required: true
        example: fjba
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address.address_line2:
        name: address.address_line2
        description: 'Must not be greater than 255 characters.'
        required: false
        example: uvkwtobxohjivlgisj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address.state:
        name: address.state
        description: 'Must not be greater than 255 characters.'
        required: false
        example: clcyqcaqnnpdbwutx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: hregkjiwnbvhsyy
      email: jpfannerstill@example.net
      password: 'p4F:N%='
      address:
        address_line1: fkzbt
        city: zoqinhl
        country: ewwqacethmolrruwmfdmbfal
        postal_code: fjba
        address_line2: uvkwtobxohjivlgisj
        state: clcyqcaqnnpdbwutx
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users updated successfully.",
              "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Users deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You do not have the required permissions."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 40|hoxHnWGSJUH7Y1Lizym0OEvkjc1HDrwRR80vx1Sv5fe3764a'
    controller: null
    method: null
    route: null
    custom: []
